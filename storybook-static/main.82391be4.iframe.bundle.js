(globalThis.webpackChunkangular_starter140103=globalThis.webpackChunkangular_starter140103||[]).push([[179],{"./src/app/about-me/about-me.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{J:()=>AboutMeComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let AboutMeComponent=class AboutMeComponent{constructor(){this.myContext={$implicit:"World",localSk:"Svet"},this.tems=this.Introduction,this.myselectedtemp="first"}ngAfterContentInit(){switch(this.myselectedtemp){case"Introduction":this.tems=this.Introduction;break;case"Career":this.tems=this.Career;break;case"Development":this.tems=this.Development;break;case"Lecturer":this.tems=this.Lecturer;break;case"Telecom":this.tems=this.Telecom}}ngOnInit(){}};AboutMeComponent.propDecorators={Introduction:[{type:core.ViewChild,args:["Introduction",{static:!0}]}],Career:[{type:core.ViewChild,args:["Career",{static:!0}]}],Development:[{type:core.ViewChild,args:["Development",{static:!0}]}],Lecturer:[{type:core.ViewChild,args:["Lecturer",{static:!0}]}],Telecom:[{type:core.ViewChild,args:["Telecom",{static:!0}]}],myselectedtemp:[{type:core.Input}]},AboutMeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-about-me",template:'<ng-template #Introduction >\n    <div class="markdown" fxFlexOffset="15vw" fxLayout="row">\n        <markdown mermaid [src]="\'../../../../assets/AboutMe/Introduction.md\'"></markdown>\n     </div>\n</ng-template>\n\n<ng-template #Career >\n    <div class="markdown" fxFlex="86vw">\n        <markdown mermaid [src]="\'../../../../assets/AboutMe/Career.md\'"></markdown>\n     </div>\n</ng-template>\n\n<ng-template #Development >\n    <div class="markdown">\n        <markdown mermaid [src]="\'../../../../assets/AboutMe/Development.md\'"></markdown>\n     </div>\n</ng-template>\n\n<ng-template #Lecturer >\n    <div class="markdown">\n        <markdown mermaid [src]="\'../../../../assets/AboutMe/Lecturer.md\'"></markdown>\n     </div>\n</ng-template>\n\n<ng-template #Telecom >\n    <div class="markdown">\n        <markdown mermaid [src]="\'../../../../assets/AboutMe/Telecom.md\'"></markdown>\n     </div>\n</ng-template>\n\n\n<ng-container \n[ngTemplateOutlet]="tems"\n[ngTemplateOutletContext]="myContext"> ',styles:[""]})],AboutMeComponent)},"./src/app/app-shared/app-shared.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>AppSharedModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2020/a11y.mjs"),clipboard=__webpack_require__("./node_modules/@angular/cdk/fesm2020/clipboard.mjs"),drag_drop=__webpack_require__("./node_modules/@angular/cdk/fesm2020/drag-drop.mjs"),portal=__webpack_require__("./node_modules/@angular/cdk/fesm2020/portal.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2020/scrolling.mjs"),stepper=__webpack_require__("./node_modules/@angular/cdk/fesm2020/stepper.mjs"),table=__webpack_require__("./node_modules/@angular/cdk/fesm2020/table.mjs"),tree=__webpack_require__("./node_modules/@angular/cdk/fesm2020/tree.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2020/autocomplete.mjs"),badge=__webpack_require__("./node_modules/@angular/material/fesm2020/badge.mjs"),bottom_sheet=__webpack_require__("./node_modules/@angular/material/fesm2020/bottom-sheet.mjs"),fesm2020_button=__webpack_require__("./node_modules/@angular/material/fesm2020/button.mjs"),button_toggle=__webpack_require__("./node_modules/@angular/material/fesm2020/button-toggle.mjs"),card=__webpack_require__("./node_modules/@angular/material/fesm2020/card.mjs"),fesm2020_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2020/checkbox.mjs"),chips=__webpack_require__("./node_modules/@angular/material/fesm2020/chips.mjs"),fesm2020_stepper=__webpack_require__("./node_modules/@angular/material/fesm2020/stepper.mjs"),datepicker=__webpack_require__("./node_modules/@angular/material/fesm2020/datepicker.mjs"),dialog=__webpack_require__("./node_modules/@angular/material/fesm2020/dialog.mjs"),divider=__webpack_require__("./node_modules/@angular/material/fesm2020/divider.mjs"),expansion=__webpack_require__("./node_modules/@angular/material/fesm2020/expansion.mjs"),grid_list=__webpack_require__("./node_modules/@angular/material/fesm2020/grid-list.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2020/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2020/input.mjs"),list=__webpack_require__("./node_modules/@angular/material/fesm2020/list.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2020/menu.mjs"),fesm2020_core=__webpack_require__("./node_modules/@angular/material/fesm2020/core.mjs"),paginator=__webpack_require__("./node_modules/@angular/material/fesm2020/paginator.mjs"),progress_bar=__webpack_require__("./node_modules/@angular/material/fesm2020/progress-bar.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2020/progress-spinner.mjs"),fesm2020_radio=__webpack_require__("./node_modules/@angular/material/fesm2020/radio.mjs"),fesm2020_select=__webpack_require__("./node_modules/@angular/material/fesm2020/select.mjs"),sidenav=__webpack_require__("./node_modules/@angular/material/fesm2020/sidenav.mjs"),slider=__webpack_require__("./node_modules/@angular/material/fesm2020/slider.mjs"),slide_toggle=__webpack_require__("./node_modules/@angular/material/fesm2020/slide-toggle.mjs"),snack_bar=__webpack_require__("./node_modules/@angular/material/fesm2020/snack-bar.mjs"),sort=__webpack_require__("./node_modules/@angular/material/fesm2020/sort.mjs"),fesm2020_table=__webpack_require__("./node_modules/@angular/material/fesm2020/table.mjs"),tabs=__webpack_require__("./node_modules/@angular/material/fesm2020/tabs.mjs"),toolbar=__webpack_require__("./node_modules/@angular/material/fesm2020/toolbar.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2020/tooltip.mjs"),fesm2020_tree=__webpack_require__("./node_modules/@angular/material/fesm2020/tree.mjs"),overlay=__webpack_require__("./node_modules/@angular/cdk/fesm2020/overlay.mjs");let MaterialModule=class MaterialModule{};MaterialModule=(0,tslib_es6.gn)([(0,core.NgModule)({exports:[a11y.rt,clipboard.Iq,stepper.U5,table.HT,tree.nZ,drag_drop._t,autocomplete.Bb,badge.g,bottom_sheet._r,fesm2020_button.ot,button_toggle.vV,card.QW,fesm2020_checkbox.p9,chips.Hi,fesm2020_stepper.T5,datepicker.FA,dialog.Is,divider.t,expansion.To,grid_list.N6,icon.Ps,input.c,list.ie,menu.Tx,fesm2020_core.XK,paginator.TU,progress_bar.Cv,progress_spinner.Cq,fesm2020_radio.Fk,fesm2020_core.si,fesm2020_select.LD,sidenav.SJ,slider.KP,slide_toggle.rP,snack_bar.ZX,sort.JX,fesm2020_table.p0,tabs.Nh,toolbar.g0,tooltip.AV,fesm2020_tree.dp,overlay.U8,portal.eL,scrolling.Cl]})],MaterialModule);var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),angular_flex_layout=__webpack_require__("./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout.mjs");let AppSharedModule=class AppSharedModule{};AppSharedModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[],imports:[common.ez],exports:[MaterialModule,fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,angular_flex_layout.o9]})],AppSharedModule)},"./src/app/youtube-making/youtube-making.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>YoutubeMakingComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let YoutubeMakingComponent=class YoutubeMakingComponent{constructor(){this.tems=this.usingngxs,this.myContext={$implicit:"World",localSk:"Svet"},this.myselectedtemp="first"}ngOnInit(){}ngAfterContentInit(){switch(this.myselectedtemp){case"usingmermaid":this.tems=this.usingmermaid;break;case"usingmarkdown":this.tems=this.usingmarkdown;break;case"pagedesign":this.tems=this.pagedesign,console.log("reached");break;case"storybookdesign":this.tems=this.storybookdesign;break;case"angularsetup":this.tems=this.angularsetup;break;case"angularComp":this.tems=this.angularComp;break;case"usingngxs":this.tems=this.usingngxs}}};YoutubeMakingComponent.ctorParameters=()=>[],YoutubeMakingComponent.propDecorators={usingngxs:[{type:core.ViewChild,args:["usingngxs",{static:!0}]}],usingmermaid:[{type:core.ViewChild,args:["usingmermaid",{static:!0}]}],usingmarkdown:[{type:core.ViewChild,args:["usingmarkdown",{static:!0}]}],pagedesign:[{type:core.ViewChild,args:["pagedesign",{static:!0}]}],storybookdesign:[{type:core.ViewChild,args:["storybookdesign",{static:!0}]}],angularsetup:[{type:core.ViewChild,args:["angularsetup",{static:!0}]}],angularComp:[{type:core.ViewChild,args:["angularComp",{static:!0}]}],myselectedtemp:[{type:core.Input}]},YoutubeMakingComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-youtube-making",template:'<ng-template #pagedesign>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n          flowchart TD\r\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\r\n\r\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\r\n\r\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\r\n      \r\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\r\n\r\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\r\n\r\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\r\n        </pre\r\n    >\r\n  </markdown>\r\n</ng-template>\r\n<ng-template #angularComp>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n          flowchart TD\r\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\r\n\r\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\r\n\r\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\r\n      \r\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\r\n\r\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\r\n\r\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\r\n\r\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting npm install])\r\n\r\n          id8([8.Github-pages hosting npm install]) --\x3e  id9([9. Prepare Stackblitz Environment])\r\n\r\n          id9([9. Prepare Stackblitz Environment]) --\x3e  id10([10.Github-pages hosting])\r\n\r\n          id10([10.Github-pages hosting]) --\x3e  id11([11. Steps to load the code in stackblitz and load static files from github])\r\n        </pre\r\n    >\r\n  </markdown>\r\n  <markdown\r\n    [src]="\'../../assets/angularcomp.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    commandLine\r\n    [prompt]="\'PS C:\\Manoj>\'"\r\n    [filterOutput]="\'(out)\'"\r\n  >\r\n  </markdown>\r\n\r\n  <markdown ngPreserveWhitespaces clipboard> \r\n  ## Check the code exported to stackblitz  \r\n  </markdown>\r\n\r\n\r\n  <iframe\r\n  src="https://stackblitz.com/edit/node-jfhocj?embed=1&file=README.md&hideNavigation=1&view=editor"\r\n  style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n></iframe>\r\n\r\n<markdown ngPreserveWhitespaces clipboard> \r\n  ## Check the static files hosted in gh-pages\r\n  </markdown>\r\n\r\n<iframe\r\n  src="https://gmanojisaac.github.io/AngularComp/"\r\n  style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n></iframe>\r\n\r\n</ng-template>\r\n<ng-template #storybookdesign>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n          flowchart TD\r\n          id0([Start from angular-env-setup]) --\x3e  id1([Create a MDX file])\r\n\r\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\r\n\r\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\r\n\r\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\r\n\r\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\r\n        </pre\r\n    >\r\n  </markdown>\r\n  <markdown\r\n    mermaid\r\n    [src]="\'../assets/storydesign.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n  ></markdown>\r\n  <iframe\r\n    src="https://stackblitz.com/edit/node-fjs3wh"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n\r\n  <iframe\r\n    src="https://gmanojisaac.github.io/AngularStorybook/"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n</ng-template>\r\n<ng-template #angularsetup>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n        flowchart TD\r\n          id44([0.Get latest stackblitz env]) --\x3e  id4([1.Prepare Git Environment])\r\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\r\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Prepare Stackblitz Environment])\r\n          id6([3.Prepare Stackblitz Environment])  --\x3e  id7([4.Prepare for Storybook branch])\r\n          id7([4.Prepare for Storybook branch]) --\x3e id8([5.Host static pages in gh-pages])\r\n          id8([5.Host static pages in gh-pages]) --\x3e  id9([6.Run in stackblitz Environment])\r\n      </pre\r\n    >\r\n  </markdown>\r\n  <markdown\r\n    [src]="\'../assets/angularsetup.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    commandLine\r\n    [prompt]="\'PS C:\\Manoj>\'"\r\n    [filterOutput]="\'(out)\'"\r\n  >\r\n  </markdown>\r\n  \r\n  <iframe\r\n    src="https://stackblitz.com/edit/node-dxjexi"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n\r\n  <iframe\r\n    src="https://gmanojisaac.github.io/AngularEnv/"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n\r\n</ng-template>\r\n<ng-template #usingmermaid>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n        flowchart TD\r\n        id1([Mermaid works]) --\x3e id2([In html])\r\n        id1([Mermaid works]) --\x3e id3([From src])\r\n      </pre\r\n    >\r\n  </markdown>\r\n  <markdown ngPreserveWhitespaces clipboard>\r\n    --- ## Mermaid __works__!\r\n  </markdown>\r\n  <markdown\r\n    mermaid\r\n    [src]="\'../assets/angularmermaid.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n  ></markdown>\r\n</ng-template>\r\n<ng-template #usingmarkdown>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n        flowchart TD\r\n          id1([Markdown used in]) --\x3e id2([In html])\r\n          id1([Markdown used in]) --\x3e id3([In template])\r\n          id1([Markdown used in]) --\x3e id4([In Component])\r\n          id1([Markdown used in]) --\x3e id5([Load from src])\r\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\r\n      </pre\r\n    >\r\n  </markdown>\r\n  <markdown ngPreserveWhitespaces clipboard>\r\n    --- ## Markdown __works__!\r\n  </markdown>\r\n  <markdown\r\n    [src]="\'../assets/angularmarkdown.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    commandLine\r\n    [prompt]="\'PS C:\\Manoj>\'"\r\n    [filterOutput]="\'(out)\'"\r\n  >\r\n    ></markdown\r\n  >\r\n</ng-template>\r\n<ng-template #usingngxs>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <markdown\r\n    mermaid\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n    fxLayoutAlign="center center"\r\n  >\r\n    <pre class="mermaid">\r\n    flowchart TD\r\n      id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\r\n      id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\r\n      id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\r\n      id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\r\n      id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\r\n      id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\r\n      id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\r\n      \r\n  </pre\r\n    >\r\n  </markdown>\r\n  <markdown ngPreserveWhitespaces clipboard> --- ## NgXs __works__! </markdown>\r\n  <div fxLayoutAlign="center center">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../assets/angularngxs.md\'"\r\n      ngPreserveWhitespaces\r\n      clipboard\r\n    ></markdown>\r\n  </div>\r\n  <iframe\r\n    src="https://stackblitz.com/edit/node-6idh7k?embed=1&file=README.md&hideNavigation=1&view=editor"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n\r\n  <iframe\r\n    src="https://gmanojisaac.github.io/Angularngxs/ngxs"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n</ng-template>\r\n<ng-container [ngTemplateOutlet]="tems" [ngTemplateOutletContext]="myContext">\r\n</ng-container>\r\n',styles:[""]})],YoutubeMakingComponent)},"./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{P:()=>SeptfifteenComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let SeptfifteenComponent=class SeptfifteenComponent{constructor(){this.myselectedtemp="first",this.myContext={$implicit:"World",localSk:"Svet"},this.tems=this.Title}ngOnInit(){}ngAfterContentInit(){switch(this.myselectedtemp){case"Title":this.tems=this.Title;break;case"Flowchart":this.tems=this.Flowchart;break;case"Angular":this.tems=this.Angular;break;case"Storybook":this.tems=this.Storybook;break;case"PRUpdate":this.tems=this.PRUpdate;break;case"Output":this.tems=this.Output}}};SeptfifteenComponent.propDecorators={myselectedtemp:[{type:core.Input}],Title:[{type:core.ViewChild,args:["Title",{static:!0}]}],Flowchart:[{type:core.ViewChild,args:["Flowchart",{static:!0}]}],Angular:[{type:core.ViewChild,args:["Angular",{static:!0}]}],Storybook:[{type:core.ViewChild,args:["Storybook",{static:!0}]}],PRUpdate:[{type:core.ViewChild,args:["PRUpdate",{static:!0}]}],Output:[{type:core.ViewChild,args:["Output",{static:!0}]}]},SeptfifteenComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-septfifteen",template:'<ng-template #Title>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <div class="markdown" fxLayoutAlign="center center">\r\n    <markdown mermaid [src]="\'../../assets/Sep2022/Title.md\'"></markdown>\r\n  </div>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <div class="footer">\r\n    <markdown\r\n      emoji\r\n      class="footer-text"\r\n      fxLayout="row"\r\n      fxLayoutAlign.gt-xs="center"\r\n    >\r\n      Crafted with :heart: by **gmanojisaac**\r\n      <span style="margin:0 .15em;">•</span> Follow on\r\n      [GitHub](https://github.com/gmanoj.isaac)\r\n    </markdown>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #Flowchart>\r\n  <div class="markdown" fxFlexOffset="15vw" fxLayout="row">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../../../../assets/Sep2022/Flowchart.md\'"\r\n    ></markdown>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #Angular>\r\n  <div class="markdown" fxFlexOffset="15vw" fxLayout="row">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../../../../assets/Sep2022/Angular.md\'"\r\n    ></markdown>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #Storybook>\r\n  <div class="markdown" fxFlexOffset="15vw" fxLayout="row">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../../../../assets/Sep2022/Storybook.md\'"\r\n    ></markdown>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #PRUpdate>\r\n  <div class="markdown" fxFlexOffset="15vw" fxLayout="row">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../../../../assets/Sep2022/UpdatePR.md\'"\r\n    ></markdown>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #Output>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <div class="markdown" fxLayoutAlign="center center">\r\n    <markdown\r\n      mermaid\r\n      [src]="\'../../assets/Sep2022/stackblitzTitle.md\'"\r\n    ></markdown>\r\n  </div>\r\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\r\n  <div class="footer">\r\n    <markdown\r\n      emoji\r\n      class="footer-text"\r\n      fxLayout="row"\r\n      fxLayoutAlign.gt-xs="center"\r\n    >\r\n      Crafted with :heart: by **gmanojisaac**\r\n      <span style="margin:0 .15em;">•</span> Follow on\r\n      [GitHub](https://github.com/gmanoj.isaac)\r\n    </markdown>\r\n  </div>\r\n  <markdown\r\n    mermaid\r\n    [src]="\'../../assets/Sep2022/Output.md\'"\r\n    ngPreserveWhitespaces\r\n    clipboard\r\n  ></markdown>\r\n\r\n  <iframe\r\n    src="https://stackblitz.com/edit/node-guc5va"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n\r\n  <iframe\r\n    src="https://gmanojisaac.github.io/AngularGithub/beforelogin"\r\n    style="width: 50em; min-height: 30em; margin-top: 10vh;"\r\n  ></iframe>\r\n</ng-template>\r\n\r\n<ng-container\r\n  [ngTemplateOutlet]="tems"\r\n  [ngTemplateOutletContext]="myContext"\r\n></ng-container>\r\n',styles:[""]})],SeptfifteenComponent)},"./src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"Task","id":"interface-Task-d4d37e919bf153b85cd73cf76b3d81234228b20ae5a9a500ccf0118c584fdae333a8448d8becdbaa20c0fdaf47fd111516c76691ee76980e2a62f442b656bd75","file":"src/app/models/task.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Task {\\r\\n  id: string;\\r\\n  title: string;\\r\\n  state: string;\\r\\n}\\r\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TaskStateModel","id":"interface-TaskStateModel-0e8c385cc1879b5e35e8f068e526f3bbf78284297784a3aea23516d05ee274c12db1d1d63734bf0eae8f6d61f81099a8bf9abe015a0076f6741f207621f0ec77","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { patch, updateItem } from \'@ngxs/store/operators\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// Defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = [\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n];\\r\\n\\r\\nexport interface TaskStateModel {\\r\\n  tasks: Task[];\\r\\n  status: \'idle\' | \'loading\' | \'success\' | \'error\';\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'taskbox\',\\r\\n  defaults: {\\r\\n    tasks: defaultTasks,\\r\\n    status: \'idle\',\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\n@Injectable()\\r\\nexport class TasksState {\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel): boolean {\\r\\n    return state.error;\\r\\n  }\\r\\n\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel): Task[] {\\r\\n    return state.tasks;\\r\\n  }\\r\\n\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_PINNED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (pinnedTask) => pinnedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Triggers the archiveTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_ARCHIVED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (archivedTask) => archivedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","properties":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42},{"name":"status","deprecated":false,"deprecationMessage":"","type":"\\"idle\\" | \\"loading\\" | \\"success\\" | \\"error\\"","optional":false,"description":"","line":41},{"name":"tasks","deprecated":false,"deprecationMessage":"","type":"Task[]","optional":false,"description":"","line":40}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[{"name":"TasksState","id":"injectable-TasksState-0e8c385cc1879b5e35e8f068e526f3bbf78284297784a3aea23516d05ee274c12db1d1d63734bf0eae8f6d61f81099a8bf9abe015a0076f6741f207621f0ec77","file":"src/app/state/task.state.ts","properties":[],"methods":[{"name":"archiveTask","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"ArchiveTask","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"ArchiveTask"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"ArchiveTask","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAllTasks","args":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Task[]","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Selector","stringifiedArguments":""}],"modifierKind":[124],"jsdoctags":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getError","args":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Selector","stringifiedArguments":""}],"modifierKind":[124],"jsdoctags":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pinTask","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"PinTask","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"PinTask"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"PinTask","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setAppError","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"AppError","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"AppError"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"AppError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { patch, updateItem } from \'@ngxs/store/operators\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// Defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = [\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n];\\r\\n\\r\\nexport interface TaskStateModel {\\r\\n  tasks: Task[];\\r\\n  status: \'idle\' | \'loading\' | \'success\' | \'error\';\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'taskbox\',\\r\\n  defaults: {\\r\\n    tasks: defaultTasks,\\r\\n    status: \'idle\',\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\n@Injectable()\\r\\nexport class TasksState {\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel): boolean {\\r\\n    return state.error;\\r\\n  }\\r\\n\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel): Task[] {\\r\\n    return state.tasks;\\r\\n  }\\r\\n\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_PINNED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (pinnedTask) => pinnedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Triggers the archiveTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_ARCHIVED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (archivedTask) => archivedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"AppError","id":"class-AppError-0e8c385cc1879b5e35e8f068e526f3bbf78284297784a3aea23516d05ee274c12db1d1d63734bf0eae8f6d61f81099a8bf9abe015a0076f6741f207621f0ec77","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { patch, updateItem } from \'@ngxs/store/operators\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// Defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = [\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n];\\r\\n\\r\\nexport interface TaskStateModel {\\r\\n  tasks: Task[];\\r\\n  status: \'idle\' | \'loading\' | \'success\' | \'error\';\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'taskbox\',\\r\\n  defaults: {\\r\\n    tasks: defaultTasks,\\r\\n    status: \'idle\',\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\n@Injectable()\\r\\nexport class TasksState {\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel): boolean {\\r\\n    return state.error;\\r\\n  }\\r\\n\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel): Task[] {\\r\\n    return state.tasks;\\r\\n  }\\r\\n\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_PINNED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (pinnedTask) => pinnedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Triggers the archiveTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_ARCHIVED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (archivedTask) => archivedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"boolean","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"payload","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"type","defaultValue":"actions.ERROR","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ArchiveTask","id":"class-ArchiveTask-0e8c385cc1879b5e35e8f068e526f3bbf78284297784a3aea23516d05ee274c12db1d1d63734bf0eae8f6d61f81099a8bf9abe015a0076f6741f207621f0ec77","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { patch, updateItem } from \'@ngxs/store/operators\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// Defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = [\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n];\\r\\n\\r\\nexport interface TaskStateModel {\\r\\n  tasks: Task[];\\r\\n  status: \'idle\' | \'loading\' | \'success\' | \'error\';\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'taskbox\',\\r\\n  defaults: {\\r\\n    tasks: defaultTasks,\\r\\n    status: \'idle\',\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\n@Injectable()\\r\\nexport class TasksState {\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel): boolean {\\r\\n    return state.error;\\r\\n  }\\r\\n\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel): Task[] {\\r\\n    return state.tasks;\\r\\n  }\\r\\n\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_PINNED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (pinnedTask) => pinnedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Triggers the archiveTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_ARCHIVED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (archivedTask) => archivedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"type","defaultValue":"actions.ARCHIVE_TASK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PinTask","id":"class-PinTask-0e8c385cc1879b5e35e8f068e526f3bbf78284297784a3aea23516d05ee274c12db1d1d63734bf0eae8f6d61f81099a8bf9abe015a0076f6741f207621f0ec77","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { patch, updateItem } from \'@ngxs/store/operators\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// Defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = [\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n];\\r\\n\\r\\nexport interface TaskStateModel {\\r\\n  tasks: Task[];\\r\\n  status: \'idle\' | \'loading\' | \'success\' | \'error\';\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'taskbox\',\\r\\n  defaults: {\\r\\n    tasks: defaultTasks,\\r\\n    status: \'idle\',\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\n@Injectable()\\r\\nexport class TasksState {\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel): boolean {\\r\\n    return state.error;\\r\\n  }\\r\\n\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel): Task[] {\\r\\n    return state.tasks;\\r\\n  }\\r\\n\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_PINNED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (pinnedTask) => pinnedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Triggers the archiveTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { getState, setState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const task = getState().tasks.find((task) => task.id === payload);\\r\\n    if (task) {\\r\\n      const updatedTask: Task = {\\r\\n        ...task,\\r\\n        state: \'TASK_ARCHIVED\',\\r\\n      };\\r\\n      setState(\\r\\n        patch({\\r\\n          tasks: updateItem<Task>(\\r\\n            (archivedTask) => archivedTask?.id === payload,\\r\\n            updatedTask\\r\\n          ),\\r\\n        })\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"type","defaultValue":"actions.PIN_TASK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AboutMeComponent","id":"component-AboutMeComponent-a7ec0aef56ec64445cf3a24e17a990c462a03fd7f391557abd5bee6519223d9b045e348a2c71c4f456a0d2dc9f5afe3fac9b520cbee0892b821d5f9bb3371eb2","file":"src/app/about-me/about-me.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-about-me","styleUrls":["./about-me.component.scss"],"styles":[],"templateUrl":["./about-me.component.html"],"viewProviders":[],"inputsClass":[{"name":"myselectedtemp","defaultValue":"\'first\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"Career","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Career\', {static: true}"}]},{"name":"Development","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":17,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Development\', {static: true}"}]},{"name":"Introduction","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":11,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Introduction\', {static: true}"}]},{"name":"Lecturer","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Lecturer\', {static: true}"}]},{"name":"myContext","defaultValue":"{ $implicit: \'World\', localSk: \'Svet\' }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":25},{"name":"Telecom","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Telecom\', {static: true}"}]},{"name":"tems","defaultValue":"this.Introduction","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":26}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { OnInit, AfterContentInit, ViewChild, TemplateRef, Input, Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-about-me\',\\n  templateUrl: \'./about-me.component.html\',\\n  styleUrls: [\'./about-me.component.scss\']\\n})\\nexport class AboutMeComponent implements OnInit, AfterContentInit {\\n\\n  @ViewChild(\'Introduction\', { static: true })\\n  Introduction!: TemplateRef<any>;\\n\\n  @ViewChild(\'Career\', { static: true })\\n  Career!: TemplateRef<any>;\\n\\n  @ViewChild(\'Development\', { static: true })\\n  Development!: TemplateRef<any>;\\n\\n  @ViewChild(\'Lecturer\', { static: true })\\n  Lecturer!: TemplateRef<any>;\\n\\n  @ViewChild(\'Telecom\', { static: true })\\n  Telecom!: TemplateRef<any>;\\n\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\n  tems: TemplateRef<any> = this.Introduction;\\n\\n  @Input()\\n  myselectedtemp: string = \'first\';\\n\\n  ngAfterContentInit() {\\n    switch (this.myselectedtemp) {\\n      case \'Introduction\':\\n        this.tems = this.Introduction;\\n        break;\\n      case \'Career\':\\n        this.tems = this.Career;\\n        break;\\n      case \'Development\':\\n        this.tems = this.Development;\\n        break;\\n      case \'Lecturer\':\\n        this.tems = this.Lecturer;\\n        break;\\n      case \'Telecom\':\\n        this.tems = this.Telecom;\\n        break;\\n    }\\n  }\\n  ngOnInit(): void {\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./about-me.component.scss"}],"stylesData":"","implements":["OnInit","AfterContentInit"],"templateData":"<ng-template #Introduction >\\n    <div class=\\"markdown\\" fxFlexOffset=\\"15vw\\" fxLayout=\\"row\\">\\n        <markdown mermaid [src]=\\"\'../../../../assets/AboutMe/Introduction.md\'\\"></markdown>\\n     </div>\\n</ng-template>\\n\\n<ng-template #Career >\\n    <div class=\\"markdown\\" fxFlex=\\"86vw\\">\\n        <markdown mermaid [src]=\\"\'../../../../assets/AboutMe/Career.md\'\\"></markdown>\\n     </div>\\n</ng-template>\\n\\n<ng-template #Development >\\n    <div class=\\"markdown\\">\\n        <markdown mermaid [src]=\\"\'../../../../assets/AboutMe/Development.md\'\\"></markdown>\\n     </div>\\n</ng-template>\\n\\n<ng-template #Lecturer >\\n    <div class=\\"markdown\\">\\n        <markdown mermaid [src]=\\"\'../../../../assets/AboutMe/Lecturer.md\'\\"></markdown>\\n     </div>\\n</ng-template>\\n\\n<ng-template #Telecom >\\n    <div class=\\"markdown\\">\\n        <markdown mermaid [src]=\\"\'../../../../assets/AboutMe/Telecom.md\'\\"></markdown>\\n     </div>\\n</ng-template>\\n\\n\\n<ng-container \\n[ngTemplateOutlet]=\\"tems\\"\\n[ngTemplateOutletContext]=\\"myContext\\"> "},{"name":"AboutmeDevelopmentComponent","id":"component-AboutmeDevelopmentComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-aboutme-Development","styleUrls":[],"styles":[],"template":"\\n\\n<mat-progress-bar\\n    [mode]=\\"mode\\"\\n    [value]=\\"value\\"\\n    [bufferValue]=\\"bufferValue\\"\\n    [color]=\\"color\\">\\n</mat-progress-bar>\\n\\n\\n<div class=\\"markdown\\">\\n  <markdown\\n    class=\\"variable-binding\\"\\n    [src]=\\"\'../../assets/Development.md\'\\"\\n  ></markdown>\\n</div>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":287,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":293,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":296,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":275,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":281,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":273,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":270},"implements":["OnInit"]},{"name":"AboutmeIntroductionComponent","id":"component-AboutmeIntroductionComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-aboutme-Introduction","styleUrls":[],"styles":[],"template":"\\n\\n<mat-progress-bar\\n    [mode]=\\"mode\\"\\n    [value]=\\"value\\"\\n    [bufferValue]=\\"bufferValue\\"\\n    [color]=\\"color\\">\\n</mat-progress-bar>\\n\\n\\n<div class=\\"markdown\\">\\n  <markdown\\n    class=\\"variable-binding\\"\\n    [src]=\\"\'../../assets/Introduction.md\'\\"\\n  ></markdown>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":96,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":102,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":105,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":84,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":90,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":79},"implements":["OnInit"]},{"name":"AboutmeLecturerComponent","id":"component-AboutmeLecturerComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-aboutme-Lecturer","styleUrls":[],"styles":[],"template":"\\n\\n  <mat-progress-bar\\n      [mode]=\\"mode\\"\\n      [value]=\\"value\\"\\n      [bufferValue]=\\"bufferValue\\"\\n      [color]=\\"color\\">\\n  </mat-progress-bar>\\n\\n  <div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\n</div>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":158,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":164,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":167,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":146,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":152,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":141},"implements":["OnInit"]},{"name":"AboutmeTelecomComponent","id":"component-AboutmeTelecomComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-aboutme-Telecom","styleUrls":[],"styles":[],"template":"\\n\\n  <mat-progress-bar\\n      [mode]=\\"mode\\"\\n      [value]=\\"value\\"\\n      [bufferValue]=\\"bufferValue\\"\\n      [color]=\\"color\\">\\n  </mat-progress-bar>\\n\\n\\n  <div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\n</div>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":221,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":227,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":230,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":209,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":215,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":207,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":204},"implements":["OnInit"]},{"name":"AboutmeTestingComponent","id":"component-AboutmeTestingComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-aboutme-Testing","styleUrls":[],"styles":["\\n    .footer {\\n      margin: 32px 0 8px;\\n\\n      &-text {\\n        display: block;\\n        font-size: 13px;\\n        padding-top: 4px;\\n      }\\n    }\\n\\n    .mat-fab,\\n    .mat-mini-fab {\\n      img {\\n        margin-bottom: 2px;\\n      }\\n    }\\n\\n    .sticky {\\n      position: sticky;\\n      top: 80px;\\n    }\\n\\n    .scrollup-button {\\n      margin:14px;\\n\\n      &--fixed {\\n        position: fixed;\\n        bottom: 16px;\\n        right: 16px;\\n      }\\n    }    \\n    "],"template":"  <mat-progress-bar\\n      [mode]=\\"mode\\"\\n      [value]=\\"value\\"\\n      [bufferValue]=\\"bufferValue\\"\\n      [color]=\\"color\\">\\n  </mat-progress-bar>\\n\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\n</div>\\n\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\n[lineOffset]=\\"5\\">\\n  ```typescript\\n  export function greetings(name: string): string &#123;\\n    return \'Hello \' + name;\\n  }\\n  ```\\n</markdown>\\n\\n\\n<markdown ngPreserveWhitespaces clipboard\\n  commandLine\\n  [prompt]=\\"\'PS C:UsersChris>\'\\"\\n  [filterOutput]=\\"\'(out)\'\\">\\n  ``` powershell\\n  Get-Date\\n  (out)\\n  (ut)Sunday, November 7, 2021 8:19:21 PM\\n  (out)\\n  ```\\n</markdown>\\n\\n<div class=\\"footer\\">\\n  <mat-divider></mat-divider>\\n  <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\n    Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\n  </markdown>\\n</div>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":411,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":417,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":420,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":399,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":405,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    .footer {\\n      margin: 32px 0 8px;\\n\\n      &-text {\\n        display: block;\\n        font-size: 13px;\\n        padding-top: 4px;\\n      }\\n    }\\n\\n    .mat-fab,\\n    .mat-mini-fab {\\n      img {\\n        margin-bottom: 2px;\\n      }\\n    }\\n\\n    .sticky {\\n      position: sticky;\\n      top: 80px;\\n    }\\n\\n    .scrollup-button {\\n      margin:14px;\\n\\n      &--fixed {\\n        position: fixed;\\n        bottom: 16px;\\n        right: 16px;\\n      }\\n    }    \\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":394},"implements":["OnInit"]},{"name":"AppComponent","id":"component-AppComponent-7a2a8d3427e8f24d6f57bd9983ce9182ff3d05c2d55f21dd60b38cdae15aa5e8f97859ee84ba67cbbd133c862e1cf0e012ef5eb065efaded6d6e71865a889dbb","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[{"name":"Inputtems","deprecated":false,"deprecationMessage":"","line":14,"type":"TemplateRef<any>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"greet","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'greet\', {static: true}"}]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"tems","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":15},{"name":"title","defaultValue":"\'AngularStarter140103\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ViewChild, TemplateRef, AfterContentInit, Input} from \'@angular/core\';\\r\\nimport mermaid from \'mermaid\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-root\',\\r\\n  templateUrl: \'./app.component.html\',\\r\\n  styleUrls: [\'./app.component.scss\']\\r\\n})\\r\\nexport class AppComponent implements OnInit, AfterContentInit {\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @Input()\\r\\n  Inputtems!: TemplateRef<any>;\\r\\n  tems!: TemplateRef<any>;\\r\\n  \\r\\n\\r\\n  title = \'AngularStarter140103\';\\r\\n\\r\\n  markdowncode = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    mermaid.initialize({\\r\\n      startOnLoad: true\\r\\n    });\\r\\n  }\\r\\n\\r\\n  ngAfterContentInit () {\\r\\n    this.tems = this.Inputtems;\\r\\n  }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n <markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n<pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n */","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","implements":["OnInit","AfterContentInit"],"templateData":"<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n<div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\n  <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\n  <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\n</div>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n\\n<h1>TaskOhers</h1>\\n<markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\n</div>\\n<pre class=\\"mermaid\\">\\n  sequenceDiagram\\n    Alice->>John: Hello John, how are you?\\n    John--\x3e>Alice: Great!\\n</pre>\\n\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\n<ng-template #svk let-person=\\"localSk\\"><span>Ahoj {{person}}!</span></ng-template>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n<ng-container [ngTemplateOutlet]=\\"tems\\"> </ng-container>"},{"name":"InboxScreenComponent","id":"component-InboxScreenComponent-bb3d219e1c7a2547703b95b69d3353cf7646e620e19d2a03f0d8ab4020ef0818d5303d9cdf48f9d0296ce7469de4d245dd6726cbeed0730b5128b4f48fd91e2f","file":"src/app/components/inbox-screen.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-inbox-screen","styleUrls":[],"styles":[],"template":"    \x3c!--app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen--\x3e\\n    <markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/myfile.md\'\\"></markdown>\\n</div>\\n\\n<div class=\\"markdown\\">\\n  <markdown [src]=\\"\'../../assets/myfilemark.md\'\\"></markdown>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28},{"name":"title","defaultValue":"\'AngularStarter140103\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\n//import { Store } from \'@ngxs/store\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-inbox-screen\',\\r\\n  template: `\\r\\n    \x3c!--app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen--\x3e\\r\\n    <markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown [src]=\\"\'../../assets/myfilemark.md\'\\"></markdown>\\r\\n</div>\\r\\n  `\\r\\n})\\r\\nexport class InboxScreenComponent  implements OnInit{\\r\\n  //error$: Observable<boolean>;\\r\\n  //constructor(private store: Store) {\\r\\n    //this.error$ = store.select((state) => state.taskbox.error);\\r\\n  //}\\r\\n\\r\\n  title = \'AngularStarter140103\';\\r\\n  markdowncode = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n\\r\\n  ngOnInit(): void {\\r\\n\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"ProgressBarComponent","id":"component-ProgressBarComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-progress-bar","styleUrls":["./progress-bar.component.scss"],"styles":[],"templateUrl":["./progress-bar.component.html"],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":31,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":37,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":40,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar mode - determinate | indeterminate | Buffer | Query\\n","description":"<p>ProgressBar mode - determinate | indeterminate | Buffer | Query</p>\\n","line":19,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":25,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./progress-bar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"implements":["OnInit"],"templateData":"<mat-progress-bar\\r\\n  [mode]=\\"mode\\"\\r\\n  [value]=\\"value\\"\\r\\n  [bufferValue]=\\"bufferValue\\"\\r\\n  [color]=\\"color\\"\\r\\n>\\r\\n</mat-progress-bar>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n\x3c!--div class=\\"markdown\\">\\r\\n  <markdown\\r\\n    class=\\"variable-binding\\"\\r\\n    [src]=\\"\'../../assets/myfilemark.md\'\\"\\r\\n  ></markdown>\\r\\n</div--\x3e\\r\\n"},{"name":"PureInboxScreenComponent","id":"component-PureInboxScreenComponent-a676e1e8bbe0cd88f1822c581c958e89a283edd945d1e4f252ead68a34278a4f7df81031638981a2244553b511adc57a7cd7e792ba8a5a59da8da367513c0bc1","file":"src/app/components/pure-inbox-screen.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-pure-inbox-screen","styleUrls":[],"styles":[],"template":"<div *ngIf=\\"error\\" class=\\"page lists-show\\">\\n  <div class=\\"wrapper-message\\">\\n    <span class=\\"icon-face-sad\\"></span>\\n    <p class=\\"title-message\\">Oh no!</p>\\n    <p class=\\"subtitle-message\\">Something went wrong</p>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\n  <nav>\\n    <h1 class=\\"title-page\\">Taskbox</h1>\\n  </nav>\\n  <app-task-list></app-task-list>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"error","deprecated":false,"deprecationMessage":"","line":23,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-pure-inbox-screen\',\\r\\n  template: `\\r\\n    <div *ngIf=\\"error\\" class=\\"page lists-show\\">\\r\\n      <div class=\\"wrapper-message\\">\\r\\n        <span class=\\"icon-face-sad\\"></span>\\r\\n        <p class=\\"title-message\\">Oh no!</p>\\r\\n        <p class=\\"subtitle-message\\">Something went wrong</p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\r\\n      <nav>\\r\\n        <h1 class=\\"title-page\\">Taskbox</h1>\\r\\n      </nav>\\r\\n      <app-task-list></app-task-list>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class PureInboxScreenComponent {\\r\\n  @Input() error: any;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PureTaskListComponent","id":"component-PureTaskListComponent-891dd64089bd5d03933d69268d8e68d1d041fdc3f4d61f7a165f7b48c19f2103b900e3d98fa6d4c102250b310a8e4b42fd6a9cecdbe3369c0743536372a393a4","file":"src/app/components/pure-task-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-pure-task-list","styleUrls":[],"styles":[],"template":"<div class=\\"list-items\\">\\n  <app-task\\n    *ngFor=\\"let task of tasksInOrder\\"\\n    [task]=\\"task\\"\\n    (onArchiveTask)=\\"onArchiveTask.emit($event)\\"\\n    (onPinTask)=\\"onPinTask.emit($event)\\"\\n  >\\n  </app-task>\\n\\n  <div\\n    *ngIf=\\"tasksInOrder.length === 0 && !loading\\"\\n    class=\\"wrapper-message\\"\\n  >\\n    <span class=\\"icon-check\\"></span>\\n    <p class=\\"title-message\\">You have no tasks</p>\\n    <p class=\\"subtitle-message\\">Sit back and relax</p>\\n  </div>\\n  <div *ngIf=\\"loading\\">\\n    <div *ngFor=\\"let i of [1, 2, 3, 4, 5, 6]\\" class=\\"loading-item\\">\\n      <span class=\\"glow-checkbox\\"></span>\\n      <span class=\\"glow-text\\">\\n        <span>Loading</span> <span>cool</span> <span>state</span>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":42,"type":"boolean","decorators":[]},{"name":"tasks","deprecated":false,"deprecationMessage":"","line":51,"type":"Task[]","decorators":[]}],"outputsClass":[{"name":"onArchiveTask","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":48,"type":"EventEmitter<any>"},{"name":"onPinTask","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":45,"type":"EventEmitter<any>"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-pure-task-list\',\\r\\n  template: `\\r\\n    <div class=\\"list-items\\">\\r\\n      <app-task\\r\\n        *ngFor=\\"let task of tasksInOrder\\"\\r\\n        [task]=\\"task\\"\\r\\n        (onArchiveTask)=\\"onArchiveTask.emit($event)\\"\\r\\n        (onPinTask)=\\"onPinTask.emit($event)\\"\\r\\n      >\\r\\n      </app-task>\\r\\n\\r\\n      <div\\r\\n        *ngIf=\\"tasksInOrder.length === 0 && !loading\\"\\r\\n        class=\\"wrapper-message\\"\\r\\n      >\\r\\n        <span class=\\"icon-check\\"></span>\\r\\n        <p class=\\"title-message\\">You have no tasks</p>\\r\\n        <p class=\\"subtitle-message\\">Sit back and relax</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\"loading\\">\\r\\n        <div *ngFor=\\"let i of [1, 2, 3, 4, 5, 6]\\" class=\\"loading-item\\">\\r\\n          <span class=\\"glow-checkbox\\"></span>\\r\\n          <span class=\\"glow-text\\">\\r\\n            <span>Loading</span> <span>cool</span> <span>state</span>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class PureTaskListComponent {\\r\\n  /**\\r\\n   * @ignore\\r\\n   * Component property to define ordering of tasks\\r\\n   */\\r\\n  tasksInOrder: Task[] = [];\\r\\n\\r\\n  @Input() loading = false;\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output() onPinTask: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output() onArchiveTask: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Input()\\r\\n  set tasks(arr: Task[]) {\\r\\n    const initialTasks = [\\r\\n      ...arr.filter((t) => t.state === \'TASK_PINNED\'),\\r\\n      ...arr.filter((t) => t.state !== \'TASK_PINNED\'),\\r\\n    ];\\r\\n    const filteredTasks = initialTasks.filter(\\r\\n      (t) => t.state === \'TASK_INBOX\' || t.state === \'TASK_PINNED\'\\r\\n    );\\r\\n    this.tasksInOrder = filteredTasks.filter(\\r\\n      (t) => t.state === \'TASK_INBOX\' || t.state === \'TASK_PINNED\'\\r\\n    );\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"tasks":{"name":"tasks","setSignature":{"name":"tasks","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"arr","type":"Task[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":51,"jsdoctags":[{"name":"arr","type":"Task[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"SeptfifteenComponent","id":"component-SeptfifteenComponent-1963bd49c14b7e871e047fa5bc0fc07fb00666a0b56778eb8ac31a77f9075fcfdb4b9fb84afa56a65c9de85a818e74b9c753c0a4d4b43a836ee7060d9453a2a8","file":"src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-septfifteen","styleUrls":["./septfifteen.component.scss"],"styles":[],"templateUrl":["./septfifteen.component.html"],"viewProviders":[],"inputsClass":[{"name":"myselectedtemp","defaultValue":"\'first\'","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"Angular","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Angular\', {static: true}"}]},{"name":"Flowchart","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Flowchart\', {static: true}"}]},{"name":"myContext","defaultValue":"{$implicit: \'World\', localSk: \'Svet\'}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":30},{"name":"Output","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Output\', {static: true}"}]},{"name":"PRUpdate","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":25,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'PRUpdate\', {static: true}"}]},{"name":"Storybook","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":22,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Storybook\', {static: true}"}]},{"name":"tems","defaultValue":"this.Title","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32},{"name":"Title","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'Title\', {static: true}"}]}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { OnInit, AfterContentInit, ViewChild, TemplateRef, Input, Component } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-septfifteen\',\\r\\n  templateUrl: \'./septfifteen.component.html\',\\r\\n  styleUrls: [\'./septfifteen.component.scss\']\\r\\n})\\r\\nexport class SeptfifteenComponent implements OnInit, AfterContentInit  {\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  @ViewChild(\'Title\', { static: true })\\r\\n  Title!: TemplateRef<any>;\\r\\n  @ViewChild(\'Flowchart\', { static: true })\\r\\n  Flowchart!: TemplateRef<any>;\\r\\n  \\r\\n  @ViewChild(\'Angular\', { static: true })\\r\\n  Angular!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'Storybook\', { static: true })\\r\\n  Storybook!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'PRUpdate\', { static: true })\\r\\n  PRUpdate!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'Output\', { static: true })\\r\\n  Output!: TemplateRef<any>;\\r\\n\\r\\n  myContext = {$implicit: \'World\', localSk: \'Svet\'};\\r\\n\\r\\n  tems: TemplateRef<any> = this.Title;\\r\\n  \\r\\n  ngOnInit(){      \\r\\n  }\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n    case \'Title\':        \\r\\n      this.tems = this.Title;\\r\\n    break;  \\r\\n    case \'Flowchart\':        \\r\\n      this.tems = this.Flowchart;\\r\\n    break;     \\r\\n    case \'Angular\':        \\r\\n    this.tems = this.Angular;\\r\\n    break;\\r\\n    case \'Storybook\':        \\r\\n        this.tems = this.Storybook;\\r\\n    break;\\r\\n    case \'PRUpdate\':        \\r\\n    this.tems = this.PRUpdate;\\r\\n    break;\\r\\n    case \'Output\':        \\r\\n    this.tems = this.Output;\\r\\n    break;    \\r\\n    }\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./septfifteen.component.scss"}],"stylesData":"","implements":["OnInit","AfterContentInit"],"templateData":"<ng-template #Title>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <div class=\\"markdown\\" fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Sep2022/Title.md\'\\"></markdown>\\r\\n  </div>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <div class=\\"footer\\">\\r\\n    <markdown\\r\\n      emoji\\r\\n      class=\\"footer-text\\"\\r\\n      fxLayout=\\"row\\"\\r\\n      fxLayoutAlign.gt-xs=\\"center\\"\\r\\n    >\\r\\n      Crafted with :heart: by **gmanojisaac**\\r\\n      <span style=\\"margin:0 .15em;\\">•</span> Follow on\\r\\n      [GitHub](https://github.com/gmanoj.isaac)\\r\\n    </markdown>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #Flowchart>\\r\\n  <div class=\\"markdown\\" fxFlexOffset=\\"15vw\\" fxLayout=\\"row\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../../../../assets/Sep2022/Flowchart.md\'\\"\\r\\n    ></markdown>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #Angular>\\r\\n  <div class=\\"markdown\\" fxFlexOffset=\\"15vw\\" fxLayout=\\"row\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../../../../assets/Sep2022/Angular.md\'\\"\\r\\n    ></markdown>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #Storybook>\\r\\n  <div class=\\"markdown\\" fxFlexOffset=\\"15vw\\" fxLayout=\\"row\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../../../../assets/Sep2022/Storybook.md\'\\"\\r\\n    ></markdown>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #PRUpdate>\\r\\n  <div class=\\"markdown\\" fxFlexOffset=\\"15vw\\" fxLayout=\\"row\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../../../../assets/Sep2022/UpdatePR.md\'\\"\\r\\n    ></markdown>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #Output>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <div class=\\"markdown\\" fxLayoutAlign=\\"center center\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../../assets/Sep2022/stackblitzTitle.md\'\\"\\r\\n    ></markdown>\\r\\n  </div>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <div class=\\"footer\\">\\r\\n    <markdown\\r\\n      emoji\\r\\n      class=\\"footer-text\\"\\r\\n      fxLayout=\\"row\\"\\r\\n      fxLayoutAlign.gt-xs=\\"center\\"\\r\\n    >\\r\\n      Crafted with :heart: by **gmanojisaac**\\r\\n      <span style=\\"margin:0 .15em;\\">•</span> Follow on\\r\\n      [GitHub](https://github.com/gmanoj.isaac)\\r\\n    </markdown>\\r\\n  </div>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    [src]=\\"\'../../assets/Sep2022/Output.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n  ></markdown>\\r\\n\\r\\n  <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n</ng-template>\\r\\n\\r\\n<ng-container\\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"\\r\\n></ng-container>\\r\\n"},{"name":"StackblitzComponent","id":"component-StackblitzComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz","styleUrls":["./stackblitz.component.scss"],"styles":[],"templateUrl":["./stackblitz.component.html"],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":33,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":39,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":42,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":21,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":27,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n    .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  ","styleUrl":"./stackblitz.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":16},"implements":["OnInit"],"templateData":"<div class=\\"markdown\\" fxFlexOffset=\\"25vw\\" fxLayout=\\"row\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/stackblitzMermaid.md\'\\"></markdown>\\r\\n</div>\\r\\n"},{"name":"StackblitzMermaidInlineComponent","id":"component-StackblitzMermaidInlineComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-mermaidinline","styleUrls":[],"styles":["\\n  \\n  "],"template":"\\n<markdown mermaid >\\n  <pre class=\\"mermaid\\">\\n  sequenceDiagram\\n    Alice->>John: Hello John, how are you?\\n    John--\x3e>Alice: Great!\\n</pre>\\n</markdown>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":721,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":727,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":730,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":709,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":715,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":707,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  \\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":704},"implements":["OnInit"]},{"name":"StackblitzRunAngularComponent","id":"component-StackblitzRunAngularComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-runangular","styleUrls":["./stackblitz.component.scss"],"styles":[],"templateUrl":["./stackblitz.component.html"],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":379,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":385,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":388,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":367,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":373,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":365,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n    .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  ","styleUrl":"./stackblitz.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":362},"implements":["OnInit"],"templateData":"<div class=\\"markdown\\" fxFlexOffset=\\"25vw\\" fxLayout=\\"row\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/stackblitzMermaid.md\'\\"></markdown>\\r\\n</div>\\r\\n"},{"name":"StackblitzStartPageComponent","id":"component-StackblitzStartPageComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-startpage","styleUrls":[],"styles":["\\n  \\n  "],"template":"<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\n  </div>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n\\n<h1>TaskOhers</h1>\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\n\\n\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\n\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\n\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\n</div>\\n\\n<markdown mermaid >\\n  <pre class=\\"mermaid\\">\\n  sequenceDiagram\\n    Alice->>John: Hello John, how are you?\\n    John--\x3e>Alice: Great!\\n</pre>\\n</markdown>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":558,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":564,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`","deprecated":false,"deprecationMessage":"","line":567,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":546,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":552,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":544,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  \\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":541},"implements":["OnInit"]},{"name":"StackblitzStartTestComponent","id":"component-StackblitzStartTestComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-testpage","styleUrls":[],"styles":["\\n  \\n  "],"template":"\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\n\\n\\n\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\nDown here\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\n<ng-container\\n  [ngTemplateOutlet]=\\"tems\\"\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\nHere\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":644,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":650,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":653,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":632,"type":"ProgressBarMode","decorators":[]},{"name":"myselectedtemp","defaultValue":"\'first\'","deprecated":false,"deprecationMessage":"","line":630,"type":"string","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":638,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"eng","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":624,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'eng\', {static: true}"}]},{"name":"greet","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":620,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'greet\', {static: true}"}]},{"name":"myContext","defaultValue":"{ $implicit: \'World\', localSk: \'Svet\' }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":627},{"name":"svk","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":622,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'svk\', {static: true}"}]},{"name":"tems","defaultValue":"this.greet","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":626}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":671,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":670,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  \\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":616},"implements":["OnInit","AfterContentInit"]},{"name":"StackblitzStorybookComponent","id":"component-StackblitzStorybookComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-storybook","styleUrls":["./stackblitz.component.scss"],"styles":[],"templateUrl":["./stackblitz.component.html"],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":428,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":434,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":437,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":416,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":422,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":414,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n    .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  ","styleUrl":"./stackblitz.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":411},"implements":["OnInit"],"templateData":"<div class=\\"markdown\\" fxFlexOffset=\\"25vw\\" fxLayout=\\"row\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/stackblitzMermaid.md\'\\"></markdown>\\r\\n</div>\\r\\n"},{"name":"StackblitzTitleComponent","id":"component-StackblitzTitleComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-title","styleUrls":[],"styles":["\\n  \\n  .footer {\\n        margin: 32px 0 8px;\\n  \\n        &-text {\\n          display: block;\\n          font-size: 13px;\\n          padding-top: 4px;\\n        }\\n      }\\n  \\n      .mat-fab,\\n      .mat-mini-fab {\\n        img {\\n          margin-bottom: 2px;\\n        }\\n      }\\n  \\n      .sticky {\\n        position: sticky;\\n        top: 80px;\\n      }\\n  \\n      .scrollup-button {\\n        margin:14px;\\n  \\n        &--fixed {\\n          position: fixed;\\n          bottom: 16px;\\n          right: 16px;\\n        }\\n      }  \\n  "],"template":"\\n<ng-template #pagedesign>\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n        <pre class=\\"mermaid\\">\\n          flowchart TD\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\n\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\n\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\n\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\n\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\n\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\n        </pre>\\n      </markdown>\\n</ng-template>\\n    <ng-template #angularComp>\\n      <markdown  ngPreserveWhitespaces clipboard>\\n        ---\\n      </markdown>\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n        <pre class=\\"mermaid\\">\\n          flowchart TD\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\n\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\n\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\n\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\n\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\n\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\n\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\n        </pre>\\n      </markdown>\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\n      commandLine\\n      [prompt]=\\"\'PS C:Manoj>\'\\"\\n      [filterOutput]=\\"\'(out)\'\\">\\n    </markdown>\\n    </ng-template>\\n    <ng-template #storybookdesign >\\n      <markdown  ngPreserveWhitespaces clipboard>\\n            ---\\n      </markdown>\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n        <pre class=\\"mermaid\\">\\n          flowchart TD\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\n\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\n\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\n\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\n        </pre>\\n      </markdown>\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\n  </ng-template>\\n\\n  <ng-template #angularsetup >\\n    <markdown  ngPreserveWhitespaces clipboard>\\n        ---\\n    </markdown>\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n      <pre class=\\"mermaid\\">\\n        flowchart TD\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\n      </pre>\\n    </markdown>\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\n      commandLine\\n      [prompt]=\\"\'PS C:Manoj>\'\\"\\n      [filterOutput]=\\"\'(out)\'\\">\\n    </markdown>\\n  </ng-template>\\n\\n  <ng-template #usingmermaid >\\n    <markdown  ngPreserveWhitespaces clipboard>\\n    ---\\n    </markdown>\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n      <pre class=\\"mermaid\\">\\n        flowchart TD\\n        id1([Mermaid works]) --\x3e id2([In html])\\n        id1([Mermaid works]) --\x3e id3([From src])\\n      </pre>\\n    </markdown>\\n    <markdown  ngPreserveWhitespaces clipboard>\\n      ---\\n      ## Mermaid __works__!\\n    </markdown>\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\n  </ng-template>\\n\\n  <ng-template #usingmarkdown >\\n    <markdown  ngPreserveWhitespaces clipboard>\\n      ---\\n    </markdown>\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n      <pre class=\\"mermaid\\">\\n        flowchart TD\\n          id1([Markdown used in]) --\x3e id2([In html])\\n          id1([Markdown used in]) --\x3e id3([In template])\\n          id1([Markdown used in]) --\x3e id4([In Component])\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\n      </pre>\\n    </markdown>\\n    <markdown  ngPreserveWhitespaces clipboard>\\n      ---\\n      ## Markdown __works__!\\n    </markdown>\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard\\n    commandLine\\n      [prompt]=\\"\'PS C:Manoj>\'\\"\\n      [filterOutput]=\\"\'(out)\'\\">\\n      ></markdown>\\n  </ng-template>\\n  <ng-template #usingngxs >\\n    <markdown  ngPreserveWhitespaces clipboard>\\n      ---\\n    </markdown>\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\n      <pre class=\\"mermaid\\">\\n        flowchart TD\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\n\\n      </pre>\\n    </markdown>\\n    <markdown  ngPreserveWhitespaces clipboard>\\n      ---\\n      ## NgXs __works__!\\n    </markdown>\\n    <div fxLayoutAlign=\\"center center\\">\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\n    </div>\\n    <iframe\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\n  ></iframe>\\n  <iframe\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\n  ></iframe>\\n  </ng-template>\\n  <ng-container\\n    [ngTemplateOutlet]=\\"tems\\"\\n    [ngTemplateOutletContext]=\\"myContext\\">\\n  </ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"myselectedtemp","defaultValue":"\'first\'","deprecated":false,"deprecationMessage":"","line":304,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"angularComp","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":295,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'angularComp\', {static: true}"}]},{"name":"angularsetup","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":292,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'angularsetup\', {static: true}"}]},{"name":"mermaidCenter","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":277,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'mermaidCenter\', {static: true}"}]},{"name":"myContext","defaultValue":"{ $implicit: \'World\', localSk: \'Svet\' }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":301},{"name":"pagedesign","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":286,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'pagedesign\', {static: true}"}]},{"name":"pagedesignvar","defaultValue":"`\\r\\n\\r\\n  `","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":320},{"name":"something","defaultValue":"`\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":272},{"name":"storybookdesign","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":289,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'storybookdesign\', {static: true}"}]},{"name":"storydesign","defaultValue":"`\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":306},{"name":"tems","defaultValue":"this.mermaidCenter","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":300},{"name":"usingmarkdown","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":283,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingmarkdown\', {static: true}"}]},{"name":"usingmarkdownMarkdown","defaultValue":"`\\r\\n`","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":314},{"name":"usingmermaid","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":280,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingmermaid\', {static: true}"}]},{"name":"usingmermaidMarkdown","defaultValue":"`   \\r\\n  `","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":317},{"name":"usingngxs","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":298,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingngxs\', {static: true}"}]}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":324,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":270,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  \\n  .footer {\\n        margin: 32px 0 8px;\\n  \\n        &-text {\\n          display: block;\\n          font-size: 13px;\\n          padding-top: 4px;\\n        }\\n      }\\n  \\n      .mat-fab,\\n      .mat-mini-fab {\\n        img {\\n          margin-bottom: 2px;\\n        }\\n      }\\n  \\n      .sticky {\\n        position: sticky;\\n        top: 80px;\\n      }\\n  \\n      .scrollup-button {\\n        margin:14px;\\n  \\n        &--fixed {\\n          position: fixed;\\n          bottom: 16px;\\n          right: 16px;\\n        }\\n      }  \\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":267},"implements":["OnInit","AfterContentInit"]},{"name":"StackblitzUpdatePRComponent","id":"component-StackblitzUpdatePRComponent-882a139d50f6f8127e58df7e4950e44376c7fe7c95f226bc100f9d460fd63ca3c898b87897ebc85b1cae4bd2633aebb0592a799e93de8841456be42e4f5de735","file":"src/app/youtube/2022sept02/stackblitz.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stackblitz-updatePR","styleUrls":["./stackblitz.component.scss"],"styles":[],"templateUrl":["./stackblitz.component.html"],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":477,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":483,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":486,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":465,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":471,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":463,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n@Component({\\r\\n  selector: \'app-stackblitz\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-title\',\\r\\n  template: `\\r\\n\\r\\n<ng-template #pagedesign>\\r\\n<markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n</ng-template>\\r\\n    <ng-template #angularComp>\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown  [src]=\\"\'../../assets/angularcomp.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n    </ng-template>\\r\\n    <ng-template #storybookdesign >\\r\\n      <markdown  ngPreserveWhitespaces clipboard>\\r\\n            ---\\r\\n      </markdown>\\r\\n      <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n        <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre>\\r\\n      </markdown>\\r\\n      <markdown mermaid [src]=\\"\'../../assets/storydesign.md\'\\" ngPreserveWhitespaces clipboard ></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #angularsetup >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n        ---\\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Host static pages in gh-pages])\\r\\n          id6([3.Host static pages in gh-pages]) --\x3e  id7([4.Prepare Stackblitz Environment])\\r\\n          id7([4.Prepare Stackblitz Environment]) --\x3e  id8([5.Prepare for Storybook branch])\\r\\n          id8([5.Prepare for Storybook branch]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  [src]=\\"\'../../assets/angularsetup.md\'\\" ngPreserveWhitespaces clipboard\\r\\n      commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n    </markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmermaid >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n    ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Mermaid __works__! \\r\\n    </markdown>\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularmermaid.md\'\\"  ngPreserveWhitespaces clipboard></markdown>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #usingmarkdown >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## Markdown __works__!          \\r\\n    </markdown>      \\r\\n    <markdown  [src]=\\"\'../../assets/angularmarkdown.md\'\\" ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n      [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n      [filterOutput]=\\"\'(out)\'\\">\\r\\n      ></markdown>\\r\\n  </ng-template>\\r\\n  <ng-template #usingngxs >\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---          \\r\\n    </markdown>\\r\\n    <markdown mermaid  ngPreserveWhitespaces clipboard fxLayoutAlign=\\"center center\\">\\r\\n      <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n          id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n          id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n          id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n          id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n          id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n          id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n          \\r\\n      </pre>\\r\\n    </markdown>\\r\\n    <markdown  ngPreserveWhitespaces clipboard>\\r\\n      ---\\r\\n      ## NgXs __works__!          \\r\\n    </markdown>      \\r\\n    <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/angularngxs.md\'\\" ngPreserveWhitespaces clipboard ></markdown>   \\r\\n    </div>\\r\\n    <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-guc5va?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularGithub/beforelogin\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n  </ng-template>\\r\\n  <ng-container \\r\\n    [ngTemplateOutlet]=\\"tems\\"\\r\\n    [ngTemplateOutletContext]=\\"myContext\\"> \\r\\n  </ng-container>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzTitleComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  something = `\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;`;\\r\\n\\r\\n  @ViewChild(\'mermaidCenter\', { static: true })\\r\\n  mermaidCenter!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.mermaidCenter;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  storydesign = `\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  props: {\\r\\n  myselectedtemp : \'usingmarkdown\'\\r\\n  },\\r\\n  \\\\`\\\\`\\\\`\\r\\n  `;\\r\\n\\r\\n  usingmarkdownMarkdown = `\\r\\n`;\\r\\n\\r\\n  usingmermaidMarkdown = `   \\r\\n  `;\\r\\n\\r\\n  pagedesignvar = `\\r\\n\\r\\n  `;\\r\\n\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'mermaidCenter\':\\r\\n        this.tems = this.mermaidCenter;\\r\\n        break;\\r\\n\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-runangular\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzRunAngularComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-storybook\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzStorybookComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-updatePR\',\\r\\n  templateUrl: \'./stackblitz.component.html\',\\r\\n  styleUrls: [\'./stackblitz.component.scss\'],\\r\\n})\\r\\nexport class StackblitzUpdatePRComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-startpage\',\\r\\n  template: `\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n  <div fxLayout=\\"row\\" fxLayoutAlign=\\"center\\" fxLayoutGap=\\"10vw\\">\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n    <mat-slider fxFlex=\\"10vw\\" min=\\"1\\" max=\\"100\\" step=\\"1\\" value=\\"50\\"></mat-slider>\\r\\n  </div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n\\r\\n<h1>TaskOhers</h1>\\r\\n\x3c!--markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n<div [innerHTML]=\\"markdowncode | language : \'python\' | markdown\\"><div>\\r\\n\\r\\n<markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown>\\r\\n\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartPageComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `\\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  <h5>\\r\\n    angular@{{ angularVersion }} | ngx-markdown@{{ ngxMarkdownVersion }}\\r\\n  </h5>\\r\\n  <br>\\r\\n  \\r\\n  <div markdown ngPreserveWhitespaces>{{ markdown }}</div>\\r\\n  \x3c!-- <div markdown [data]=\\"markdown\\"></div> --\x3e\\r\\n  \\\\`\\\\`\\\\`\\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n    - Unordered list\\r\\n    - Another unordered bullet point\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max!!!`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-testpage\',\\r\\n  template: `\\r\\n\x3c!--markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n[lineOffset]=\\"5\\" [src]=\\"\'../../assets/stackblitzTypescript.md\'\\"></markdown--\x3e\\r\\n\\r\\n\\r\\n\\r\\n<div markdown ngPreserveWhitespaces>{{ markdowncode }}</div>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nDown here\\r\\n<ng-template #greet let-person><span>Hello {{person}} </span></ng-template>\\r\\n<ng-template #eng let-name><span>Hello {{name}}!</span></ng-template>\\r\\n<ng-template #svk let-person=\\"localSk\\" ><span>Ahoj {{person}}!</span></ng-template>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\n<ng-container \\r\\n  [ngTemplateOutlet]=\\"tems\\"\\r\\n  [ngTemplateOutletContext]=\\"myContext\\"> </ng-container>\\r\\n<mat-progress-bar mode=\\"buffer\\"></mat-progress-bar>\\r\\nHere\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzStartTestComponent implements OnInit, AfterContentInit {\\r\\n  constructor() {}\\r\\n\\r\\n  @ViewChild(\'greet\', { static: true })\\r\\n  greet!: TemplateRef<any>;\\r\\n  @ViewChild(\'svk\', { static: true })\\r\\n  svk!: TemplateRef<any>;\\r\\n  @ViewChild(\'eng\', { static: true })\\r\\n  eng!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.greet;\\r\\n  myContext = { $implicit: \'World\', localSk: \'Svet\' };\\r\\n\\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`powershell\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'greet\':\\r\\n        this.tems = this.greet;\\r\\n        break;\\r\\n      case \'svk\':\\r\\n        this.tems = this.svk;\\r\\n        break;\\r\\n      case \'eng\':\\r\\n        this.tems = this.eng;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stackblitz-mermaidinline\',\\r\\n  template: `\\r\\n\\r\\n<markdown mermaid >\\r\\n  <pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n</markdown>\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n  \\r\\n  `,\\r\\n  ],\\r\\n})\\r\\nexport class StackblitzMermaidInlineComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n    .footer {\\r\\n        margin: 32px 0 8px;\\r\\n  \\r\\n        &-text {\\r\\n          display: block;\\r\\n          font-size: 13px;\\r\\n          padding-top: 4px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .mat-fab,\\r\\n      .mat-mini-fab {\\r\\n        img {\\r\\n          margin-bottom: 2px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .sticky {\\r\\n        position: sticky;\\r\\n        top: 80px;\\r\\n      }\\r\\n  \\r\\n      .scrollup-button {\\r\\n        margin:14px;\\r\\n  \\r\\n        &--fixed {\\r\\n          position: fixed;\\r\\n          bottom: 16px;\\r\\n          right: 16px;\\r\\n        }\\r\\n      }  ","styleUrl":"./stackblitz.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":460},"implements":["OnInit"],"templateData":"<div class=\\"markdown\\" fxFlexOffset=\\"25vw\\" fxLayout=\\"row\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/stackblitzMermaid.md\'\\"></markdown>\\r\\n</div>\\r\\n"},{"name":"StartScreenComponent","id":"component-StartScreenComponent-da2b96fe6198a8e2f2467b7277226c1814edbf8d1b36443a4c8869741a4679298bf491cf89ab11ab2a86f30b2cd5a45e93df74d6bf6c679815a659d02a238197","file":"src/app/progress-bar/progress-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-startscreen","styleUrls":[],"styles":["\\n    .footer {\\n      margin: 32px 0 8px;\\n\\n      &-text {\\n        display: block;\\n        font-size: 13px;\\n        padding-top: 4px;\\n      }\\n    }\\n\\n    .mat-fab,\\n    .mat-mini-fab {\\n      img {\\n        margin-bottom: 2px;\\n      }\\n    }\\n\\n    .sticky {\\n      position: sticky;\\n      top: 80px;\\n    }\\n\\n    .scrollup-button {\\n      margin:14px;\\n\\n      &--fixed {\\n        position: fixed;\\n        bottom: 16px;\\n        right: 16px;\\n      }\\n    }    \\n    "],"template":"  <mat-progress-bar\\n      [mode]=\\"mode\\"\\n      [value]=\\"value\\"\\n      [bufferValue]=\\"bufferValue\\"\\n      [color]=\\"color\\">\\n  </mat-progress-bar>\\n\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\n</div>\\n\\n<div class=\\"markdown\\">\\n    <markdown\\n      [src]=\\"\'../../assets/Introduction.md\'\\"\\n    ></markdown>\\n  </div>\\n\\n<div class=\\"footer\\">\\n  <mat-divider></mat-divider>\\n  <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\n    Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\n  </markdown>\\n</div>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"bufferValue","defaultValue":"60","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\n","description":"<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\\n","line":519,"type":"number","decorators":[]},{"name":"color","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Color - primary (Theme color) | accent | warn\\n","description":"<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\\n","line":525,"type":"ThemePalette","decorators":[]},{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","line":528,"type":"string","decorators":[]},{"name":"mode","defaultValue":"\'indeterminate\'","deprecated":false,"deprecationMessage":"","line":507,"type":"ProgressBarMode","decorators":[]},{"name":"value","defaultValue":"40","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\n","description":"<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\\n","line":513,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":505,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ThemePalette } from \'@angular/material/core\';\\r\\nimport { ProgressBarMode } from \'@angular/material/progress-bar\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-progress-bar\',\\r\\n  templateUrl: \'./progress-bar.component.html\',\\r\\n  styleUrls: [\'./progress-bar.component.scss\'],\\r\\n})\\r\\nexport class ProgressBarComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  /**\\r\\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\\r\\n   */\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Introduction\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeIntroductionComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Lecturer\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Lecturer.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeLecturerComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Telecom\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Telecom.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeTelecomComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Development\',\\r\\n  template: `\\r\\n\\r\\n      \\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n\\r\\n    <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        class=\\"variable-binding\\"\\r\\n        [src]=\\"\'../../assets/Development.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  `,\\r\\n})\\r\\nexport class AboutmeDevelopmentComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-aboutme-Testing\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces lineNumbers lineHighlight  [line]=\\"\'6, 10-16\'\\"\\r\\n  [lineOffset]=\\"5\\">\\r\\n    \\\\`\\\\`\\\\`typescript\\r\\n    export function greetings(name: string): string &#123;\\r\\n      return \'Hello \' + name;\\r\\n    }\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard \\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Users\\\\Chris>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\">\\r\\n    \\\\`\\\\`\\\\` powershell\\r\\n    Get-Date\\r\\n    (out)\\r\\n    (ut)Sunday, November 7, 2021 8:19:21 PM\\r\\n    (out)\\r\\n    \\\\`\\\\`\\\\`\\r\\n  </markdown>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class AboutmeTestingComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-startscreen\',\\r\\n  template: `\\r\\n    <mat-progress-bar \\r\\n        [mode]=\\"mode\\"\\r\\n        [value]=\\"value\\"\\r\\n        [bufferValue]=\\"bufferValue\\"\\r\\n        [color]=\\"color\\">\\r\\n    </mat-progress-bar>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n    <markdown mermaid [src]=\\"\'../../assets/Testing.md\'\\"></markdown>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\"markdown\\">\\r\\n      <markdown\\r\\n        [src]=\\"\'../../assets/Introduction.md\'\\"\\r\\n      ></markdown>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\"footer\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <markdown emoji class=\\"footer-text\\" fxLayout=\\"row\\" fxLayoutAlign.gt-xs=\\"center\\">\\r\\n      Crafted with :heart: by **jfcere** <span style=\\"margin:0 .15em;\\">•</span> Follow on [GitHub](https://github.com/jfcere)\\r\\n    </markdown>\\r\\n  </div>\\r\\n\\r\\n  `,\\r\\n  styles: [\\r\\n    `\\r\\n    .footer {\\r\\n      margin: 32px 0 8px;\\r\\n\\r\\n      &-text {\\r\\n        display: block;\\r\\n        font-size: 13px;\\r\\n        padding-top: 4px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .mat-fab,\\r\\n    .mat-mini-fab {\\r\\n      img {\\r\\n        margin-bottom: 2px;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    .sticky {\\r\\n      position: sticky;\\r\\n      top: 80px;\\r\\n    }\\r\\n\\r\\n    .scrollup-button {\\r\\n      margin:14px;\\r\\n\\r\\n      &--fixed {\\r\\n        position: fixed;\\r\\n        bottom: 16px;\\r\\n        right: 16px;\\r\\n      }\\r\\n    }    \\r\\n    `,\\r\\n  ],\\r\\n})\\r\\nexport class StartScreenComponent implements OnInit {\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  @Input()\\r\\n  mode: ProgressBarMode = \'indeterminate\';\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\\r\\n   */\\r\\n  @Input()\\r\\n  value: number = 40;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\\r\\n   */\\r\\n  @Input()\\r\\n  bufferValue: number = 60;\\r\\n\\r\\n  /**\\r\\n   * ProgressBar Color - primary (Theme color) | accent | warn\\r\\n   */\\r\\n  @Input()\\r\\n  color: ThemePalette = \'primary\';\\r\\n\\r\\n  @Input()\\r\\n  markdowncode: string = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    .footer {\\n      margin: 32px 0 8px;\\n\\n      &-text {\\n        display: block;\\n        font-size: 13px;\\n        padding-top: 4px;\\n      }\\n    }\\n\\n    .mat-fab,\\n    .mat-mini-fab {\\n      img {\\n        margin-bottom: 2px;\\n      }\\n    }\\n\\n    .sticky {\\n      position: sticky;\\n      top: 80px;\\n    }\\n\\n    .scrollup-button {\\n      margin:14px;\\n\\n      &--fixed {\\n        position: fixed;\\n        bottom: 16px;\\n        right: 16px;\\n      }\\n    }    \\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":502},"implements":["OnInit"]},{"name":"TaskCheckComponent","id":"component-TaskCheckComponent-3da4bc1c1c9d7b8428e4c6464d5e3abaf94bd4d1124e1d0345cb8597b196388f1caa4af1113b54fe9c11df5406880f16cabdf6bb3facaf4b550ba641f2a19419","file":"src/app/components/checkComponent.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-check-task","styleUrls":[],"styles":[],"template":"   <h1>\\n    love\\n</h1>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component} from \'@angular/core\';\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-check-task\',\\r\\n  template: `\\r\\n   <h1>\\r\\n    love\\r\\n</h1>\\r\\n  `\\r\\n})\\r\\nexport class TaskCheckComponent {\\r\\n  \\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TaskComponent","id":"component-TaskComponent-15b261e4306d7606c2814966046a21c10f4612e9462efbf76678c2789c86e938f9e7b60bdbd19296b5bc273998b43c6bbf58ad53054a0932c4279f46d95d6557","file":"src/app/components/task.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task","styleUrls":[],"styles":[],"template":"<div class=\\"list-item {{ task.state }}\\">\\n  <label\\n    [attr.aria-label]=\\"\'archiveTask-\' + task.id\\"\\n    for=\\"checked-{{ task.id }}\\"\\n    class=\\"checkbox\\"\\n  >\\n    <input\\n      type=\\"checkbox\\"\\n      disabled=\\"true\\"\\n      [defaultChecked]=\\"task.state === \'TASK_ARCHIVED\'\\"\\n      name=\\"checked-{{ task.id }}\\"\\n      id=\\"checked-{{ task.id }}\\"\\n    />\\n    <span class=\\"checkbox-custom\\" (click)=\\"onArchive(task.id)\\"></span>\\n  </label>\\n  <label\\n    [attr.aria-label]=\\"task.title + \'\'\\"\\n    for=\\"title-{{ task.id }}\\"\\n    class=\\"title\\"\\n  >\\n    <input\\n      type=\\"text\\"\\n      [value]=\\"task.title\\"\\n      readonly=\\"true\\"\\n      id=\\"title-{{ task.id }}\\"\\n      name=\\"title-{{ task.id }}\\"\\n      style=\\"text-overflow: ellipsis;\\"\\n    />\\n  </label>\\n  <button\\n    *ngIf=\\"task?.state !== \'TASK_ARCHIVED\'\\"\\n    class=\\"pin-button\\"\\n    [attr.aria-label]=\\"\'pinTask-\' + task.id\\"\\n    (click)=\\"onPin(task.id)\\"\\n  >\\n    <span class=\\"icon-star\\"></span>\\n  </button>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"task","deprecated":false,"deprecationMessage":"","line":49,"type":"Task","decorators":[]}],"outputsClass":[{"name":"onArchiveTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":57,"type":"EventEmitter"},{"name":"onPinTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"onArchive","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onArchive event\\n","description":"<p>Component method to trigger the onArchive event</p>\\n","jsdoctags":[{"name":{"pos":1813,"end":1815,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1807,"end":1812,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]},{"name":"onPin","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onPin event\\n","description":"<p>Component method to trigger the onPin event</p>\\n","jsdoctags":[{"name":{"pos":1667,"end":1669,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1661,"end":1666,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter, OnInit } from \'@angular/core\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-task\',\\r\\n  template: `\\r\\n    <div class=\\"list-item {{ task.state }}\\">\\r\\n      <label\\r\\n        [attr.aria-label]=\\"\'archiveTask-\' + task.id\\"\\r\\n        for=\\"checked-{{ task.id }}\\"\\r\\n        class=\\"checkbox\\"\\r\\n      >\\r\\n        <input\\r\\n          type=\\"checkbox\\"\\r\\n          disabled=\\"true\\"\\r\\n          [defaultChecked]=\\"task.state === \'TASK_ARCHIVED\'\\"\\r\\n          name=\\"checked-{{ task.id }}\\"\\r\\n          id=\\"checked-{{ task.id }}\\"\\r\\n        />\\r\\n        <span class=\\"checkbox-custom\\" (click)=\\"onArchive(task.id)\\"></span>\\r\\n      </label>\\r\\n      <label\\r\\n        [attr.aria-label]=\\"task.title + \'\'\\"\\r\\n        for=\\"title-{{ task.id }}\\"\\r\\n        class=\\"title\\"\\r\\n      >\\r\\n        <input\\r\\n          type=\\"text\\"\\r\\n          [value]=\\"task.title\\"\\r\\n          readonly=\\"true\\"\\r\\n          id=\\"title-{{ task.id }}\\"\\r\\n          name=\\"title-{{ task.id }}\\"\\r\\n          style=\\"text-overflow: ellipsis;\\"\\r\\n        />\\r\\n      </label>\\r\\n      <button\\r\\n        *ngIf=\\"task?.state !== \'TASK_ARCHIVED\'\\"\\r\\n        class=\\"pin-button\\"\\r\\n        [attr.aria-label]=\\"\'pinTask-\' + task.id\\"\\r\\n        (click)=\\"onPin(task.id)\\"\\r\\n      >\\r\\n        <span class=\\"icon-star\\"></span>\\r\\n      </button>\\r\\n    </div>\\r\\n  `\\r\\n})\\r\\nexport class TaskComponent {\\r\\n  @Input()\\r\\n  task!: Task;\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onPinTask = new EventEmitter<Event>();\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onArchiveTask = new EventEmitter<Event>();\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the onPin event\\r\\n   * @param id string\\r\\n   */\\r\\n  onPin(id: any) {\\r\\n    this.onPinTask.emit(id);\\r\\n  }\\r\\n  /**\\r\\n   * Component method to trigger the onArchive event\\r\\n   * @param id string\\r\\n   */\\r\\n  onArchive(id: any) {\\r\\n    this.onArchiveTask.emit(id);\\r\\n  }\\r\\n\\r\\n  \\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TaskListComponent","id":"component-TaskListComponent-0f77e1d7ceee85302cda1f91417e939b3a48fb8135ba606e5f62e6e316434b6cd3ba09609268da5db54caf651fda1d123b372a7254985339d0a7e892ebda2dce","file":"src/app/components/task-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task-list","styleUrls":[],"styles":[],"template":"<app-pure-task-list\\n  [tasks]=\\"tasks$ | async\\"\\n  (onArchiveTask)=\\"archiveTask($event)\\"\\n  (onPinTask)=\\"pinTask($event)\\"\\n></app-pure-task-list>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"tasks$","deprecated":false,"deprecationMessage":"","type":"Observable<any>","optional":true,"description":"","line":18}],"methodsClass":[{"name":"archiveTask","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the archiveTask event\\n","description":"<p>Component method to trigger the archiveTask event</p>\\n","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pinTask","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the pinTask event\\n","description":"<p>Component method to trigger the pinTask event</p>\\n","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Store } from \'@ngxs/store\';\\r\\nimport { ArchiveTask, PinTask } from \'../state/task.state\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-task-list\',\\r\\n  template: `\\r\\n    <app-pure-task-list\\r\\n      [tasks]=\\"tasks$ | async\\"\\r\\n      (onArchiveTask)=\\"archiveTask($event)\\"\\r\\n      (onPinTask)=\\"pinTask($event)\\"\\r\\n    ></app-pure-task-list>  \\r\\n  `,\\r\\n})\\r\\nexport class TaskListComponent{\\r\\n  tasks$?: Observable<any>;\\r\\n\\r\\n  constructor(private store: Store) {\\r\\n    this.tasks$ = store.select((state) => {\\r\\n      console.log(state.taskbox.tasks);\\r\\n      return state.taskbox.tasks;      \\r\\n    } );\\r\\n    \\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the archiveTask event\\r\\n   */\\r\\n  archiveTask(id: string) {\\r\\n    this.store.dispatch(new ArchiveTask(id));\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the pinTask event\\r\\n   */\\r\\n  pinTask(id: string) {\\r\\n    this.store.dispatch(new PinTask(id));\\r\\n  }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"store","type":"Store","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"store","type":"Store","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"TaskMarkedComponent","id":"component-TaskMarkedComponent-414a5cd2dc4af77809f98dbe34c58b6749a755b48984a8a6c03187ddcb00e3cd2c1b4d7db153ba2c7965c188f811a58336a7f99399a6db395518b489d31d2030","file":"src/app/components/taskMarked.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task-marked","styleUrls":[],"styles":[],"template":"   <markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\n<div class=\\"markdown\\">\\n  <markdown mermaid [src]=\\"\'../../assets/myfile.md\'\\"></markdown>\\n</div>\\n<pre class=\\"mermaid\\">\\n  sequenceDiagram\\n    Alice->>John: Hello John, how are you?\\n    John--\x3e>Alice: Great!\\n</pre>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"task","deprecated":false,"deprecationMessage":"","line":21,"type":"Task","decorators":[]}],"outputsClass":[{"name":"onArchiveTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":29,"type":"EventEmitter"},{"name":"onPinTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter"}],"propertiesClass":[{"name":"markdowncode","defaultValue":"`## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"onArchive","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onArchive event\\n","description":"<p>Component method to trigger the onArchive event</p>\\n","jsdoctags":[{"name":{"pos":1044,"end":1046,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1038,"end":1043,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]},{"name":"onPin","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onPin event\\n","description":"<p>Component method to trigger the onPin event</p>\\n","jsdoctags":[{"name":{"pos":898,"end":900,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":892,"end":897,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter, OnInit } from \'@angular/core\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\nimport mermaid from \'mermaid\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-task-marked\',\\r\\n  template: `\\r\\n   <markdown class=\\"variable-binding\\" [data]=\\"markdowncode\\"></markdown>\\r\\n<div class=\\"markdown\\">\\r\\n  <markdown mermaid [src]=\\"\'../../assets/myfile.md\'\\"></markdown>\\r\\n</div>\\r\\n<pre class=\\"mermaid\\">\\r\\n  sequenceDiagram\\r\\n    Alice->>John: Hello John, how are you?\\r\\n    John--\x3e>Alice: Great!\\r\\n</pre>\\r\\n  `\\r\\n})\\r\\nexport class TaskMarkedComponent implements OnInit {\\r\\n  @Input()\\r\\n  task!: Task;\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onPinTask = new EventEmitter<Event>();\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onArchiveTask = new EventEmitter<Event>();\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the onPin event\\r\\n   * @param id string\\r\\n   */\\r\\n  onPin(id: any) {\\r\\n    this.onPinTask.emit(id);\\r\\n  }\\r\\n  /**\\r\\n   * Component method to trigger the onArchive event\\r\\n   * @param id string\\r\\n   */\\r\\n  onArchive(id: any) {\\r\\n    this.onArchiveTask.emit(id);\\r\\n  }\\r\\n\\r\\n  markdowncode = `## Markdown __rulez__!\\r\\n  ---\\r\\n  \\r\\n  ### Syntax highlight\\r\\n  \\\\`\\\\`\\\\`typescript\\r\\n  const language = \'typescript\';\\r\\n  \\\\`\\\\`\\\\`\\r\\n  \\r\\n  ### Lists\\r\\n  1. Ordered list\\r\\n  2. Another bullet point\\r\\n     - Unordered list\\r\\n     - Another unordered bullet\\r\\n  \\r\\n  ### Blockquote\\r\\n  > Blockquote to the max`;\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    mermaid.initialize({\\r\\n      startOnLoad: true\\r\\n    });\\r\\n  }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"YoutubeMakingComponent","id":"component-YoutubeMakingComponent-39bf97142ecd5a909018f1f4d9a3c7e43c7c3399b64fc72696da6fc96c38035dd03a1abe1407cd221268709cb8db4d42aae223f61f7447c8a9f26bee8fdf721b","file":"src/app/youtube-making/youtube-making.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-youtube-making","styleUrls":["./youtube-making.component.scss"],"styles":[],"templateUrl":["./youtube-making.component.html"],"viewProviders":[],"inputsClass":[{"name":"myselectedtemp","defaultValue":"\'first\'","deprecated":false,"deprecationMessage":"","line":42,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"angularComp","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'angularComp\', {static: true}"}]},{"name":"angularsetup","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'angularsetup\', {static: true}"}]},{"name":"myContext","defaultValue":"{$implicit: \'World\', localSk: \'Svet\'}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":39},{"name":"pagedesign","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":26,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'pagedesign\', {static: true}"}]},{"name":"storybookdesign","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'storybookdesign\', {static: true}"}]},{"name":"tems","defaultValue":"this.usingngxs","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":37},{"name":"usingmarkdown","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingmarkdown\', {static: true}"}]},{"name":"usingmermaid","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingmermaid\', {static: true}"}]},{"name":"usingngxs","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":17,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'usingngxs\', {static: true}"}]}],"methodsClass":[{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  OnInit,\\r\\n  AfterContentInit,\\r\\n  ViewChild,\\r\\n  TemplateRef,\\r\\n} from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-youtube-making\',\\r\\n  templateUrl: \'./youtube-making.component.html\',\\r\\n  styleUrls: [\'./youtube-making.component.scss\'],\\r\\n})\\r\\nexport class YoutubeMakingComponent implements OnInit {\\r\\n  @ViewChild(\'usingngxs\', { static: true })\\r\\n  usingngxs!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmermaid\', { static: true })\\r\\n  usingmermaid!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'usingmarkdown\', { static: true })\\r\\n  usingmarkdown!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'pagedesign\', { static: true })\\r\\n  pagedesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'storybookdesign\', { static: true })\\r\\n  storybookdesign!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularsetup\', { static: true })\\r\\n  angularsetup!: TemplateRef<any>;\\r\\n\\r\\n  @ViewChild(\'angularComp\', { static: true })\\r\\n  angularComp!: TemplateRef<any>;\\r\\n\\r\\n  tems: TemplateRef<any> = this.usingngxs;\\r\\n\\r\\n  myContext = {$implicit: \'World\', localSk: \'Svet\'};\\r\\n  \\r\\n  @Input()\\r\\n  myselectedtemp: string = \'first\';\\r\\n\\r\\n  constructor() {}\\r\\n\\r\\n  ngOnInit(): void {}\\r\\n  ngAfterContentInit() {\\r\\n    switch (this.myselectedtemp) {\\r\\n      case \'usingmermaid\':\\r\\n        this.tems = this.usingmermaid;\\r\\n        break;\\r\\n\\r\\n      case \'usingmarkdown\':\\r\\n        this.tems = this.usingmarkdown;\\r\\n        break;\\r\\n      case \'pagedesign\':\\r\\n        this.tems = this.pagedesign;\\r\\n        console.log(\'reached\');\\r\\n        break;\\r\\n      case \'storybookdesign\':\\r\\n        this.tems = this.storybookdesign;\\r\\n        break;\\r\\n      case \'angularsetup\':\\r\\n        this.tems = this.angularsetup;\\r\\n        break;\\r\\n      case \'angularComp\':\\r\\n        this.tems = this.angularComp;\\r\\n        break;\\r\\n      case \'usingngxs\':\\r\\n        this.tems = this.usingngxs;\\r\\n        break;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./youtube-making.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":42},"implements":["OnInit"],"templateData":"<ng-template #pagedesign>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n        </pre\\r\\n    >\\r\\n  </markdown>\\r\\n</ng-template>\\r\\n<ng-template #angularComp>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id1([1.Setup Windows Env]) --\x3e  id2([2.Run Local Hello World Angular])\\r\\n\\r\\n          id2([2.Run Local Hello World Angular]) --\x3e  id3([3.Add Shared Module])\\r\\n\\r\\n          id3([3.Add Shared Module])  --\x3e id4([4.Add Material Design])\\r\\n      \\r\\n          id4([4.Add Material Design]) --\x3e  id5([5.Add FlexLayout])\\r\\n\\r\\n          id5([5.Add FlexLayout]) --\x3e  id6([6.Add Lazy Loaded Module/ Service])\\r\\n\\r\\n          id6([6.Add Lazy Loaded Module/ Service]) --\x3e  id7([7.Add Reactive Forms])\\r\\n\\r\\n          id7([7.Add Reactive Forms]) --\x3e  id8([8.Github-pages hosting npm install])\\r\\n\\r\\n          id8([8.Github-pages hosting npm install]) --\x3e  id9([9. Prepare Stackblitz Environment])\\r\\n\\r\\n          id9([9. Prepare Stackblitz Environment]) --\x3e  id10([10.Github-pages hosting])\\r\\n\\r\\n          id10([10.Github-pages hosting]) --\x3e  id11([11. Steps to load the code in stackblitz and load static files from github])\\r\\n        </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown\\r\\n    [src]=\\"\'../../assets/angularcomp.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\"\\r\\n  >\\r\\n  </markdown>\\r\\n\\r\\n  <markdown ngPreserveWhitespaces clipboard> \\r\\n  ## Check the code exported to stackblitz  \\r\\n  </markdown>\\r\\n\\r\\n\\r\\n  <iframe\\r\\n  src=\\"https://stackblitz.com/edit/node-jfhocj?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n  style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n></iframe>\\r\\n\\r\\n<markdown ngPreserveWhitespaces clipboard> \\r\\n  ## Check the static files hosted in gh-pages\\r\\n  </markdown>\\r\\n\\r\\n<iframe\\r\\n  src=\\"https://gmanojisaac.github.io/AngularComp/\\"\\r\\n  style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n></iframe>\\r\\n\\r\\n</ng-template>\\r\\n<ng-template #storybookdesign>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n          flowchart TD\\r\\n          id0([Start from angular-env-setup]) --\x3e  id1([Create a MDX file])\\r\\n\\r\\n          id1([Create a MDX file]) --\x3e  id2([Give the correct component])\\r\\n\\r\\n          id2([Give the correct component]) --\x3e  id3([Prepare the Meta data])\\r\\n\\r\\n          id3([Prepare the Meta data]) --\x3e  id4([Create a Story from the component])\\r\\n\\r\\n          id4([Create a Story from the component]) --\x3e  id5([Change the Order of the displayed stories])\\r\\n        </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    [src]=\\"\'../assets/storydesign.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n  ></markdown>\\r\\n  <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-fjs3wh\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularStorybook/\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n</ng-template>\\r\\n<ng-template #angularsetup>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id44([0.Get latest stackblitz env]) --\x3e  id4([1.Prepare Git Environment])\\r\\n          id4([1.Prepare Git Environment]) --\x3e  id5([2.Add repo and push in github])\\r\\n          id5([2.Add repo and push in github]) --\x3e  id6([3.Prepare Stackblitz Environment])\\r\\n          id6([3.Prepare Stackblitz Environment])  --\x3e  id7([4.Prepare for Storybook branch])\\r\\n          id7([4.Prepare for Storybook branch]) --\x3e id8([5.Host static pages in gh-pages])\\r\\n          id8([5.Host static pages in gh-pages]) --\x3e  id9([6.Run in stackblitz Environment])\\r\\n      </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown\\r\\n    [src]=\\"\'../assets/angularsetup.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\"\\r\\n  >\\r\\n  </markdown>\\r\\n  \\r\\n  <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-dxjexi\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/AngularEnv/\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n\\r\\n</ng-template>\\r\\n<ng-template #usingmermaid>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n        id1([Mermaid works]) --\x3e id2([In html])\\r\\n        id1([Mermaid works]) --\x3e id3([From src])\\r\\n      </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown ngPreserveWhitespaces clipboard>\\r\\n    --- ## Mermaid __works__!\\r\\n  </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    [src]=\\"\'../assets/angularmermaid.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n  ></markdown>\\r\\n</ng-template>\\r\\n<ng-template #usingmarkdown>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n        flowchart TD\\r\\n          id1([Markdown used in]) --\x3e id2([In html])\\r\\n          id1([Markdown used in]) --\x3e id3([In template])\\r\\n          id1([Markdown used in]) --\x3e id4([In Component])\\r\\n          id1([Markdown used in]) --\x3e id5([Load from src])\\r\\n          id1([Markdown used in]) --\x3e id6([Load from .md file])\\r\\n      </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown ngPreserveWhitespaces clipboard>\\r\\n    --- ## Markdown __works__!\\r\\n  </markdown>\\r\\n  <markdown\\r\\n    [src]=\\"\'../assets/angularmarkdown.md\'\\"\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    commandLine\\r\\n    [prompt]=\\"\'PS C:\\\\Manoj>\'\\"\\r\\n    [filterOutput]=\\"\'(out)\'\\"\\r\\n  >\\r\\n    ></markdown\\r\\n  >\\r\\n</ng-template>\\r\\n<ng-template #usingngxs>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- </markdown>\\r\\n  <markdown\\r\\n    mermaid\\r\\n    ngPreserveWhitespaces\\r\\n    clipboard\\r\\n    fxLayoutAlign=\\"center center\\"\\r\\n  >\\r\\n    <pre class=\\"mermaid\\">\\r\\n    flowchart TD\\r\\n      id1([1. Ngxs setup]) --\x3e id2([2. Create HTML Task component ])\\r\\n      id2([2. Create HTML Task component ]) --\x3e id3([3. Define Task Component Array and States ])\\r\\n      id3([3. Define Task Component Array and States ]) --\x3e id4([4. Display logic for Task States from Store])\\r\\n      id4([4. Display logic for Task States from Store]) --\x3e id5([5. Load All Task States from Store])\\r\\n      id5([5. Load All Task States from Store]) --\x3e id6([6. Logic for Error State and normal state])\\r\\n      id6([6. Logic for Error State and normal state]) --\x3e id7([7. Update Error State from Store])\\r\\n      id7([7. Update Error State from Store]) --\x3e id8([8. Load the github code to stackblitz also Load the static-pages])\\r\\n      \\r\\n  </pre\\r\\n    >\\r\\n  </markdown>\\r\\n  <markdown ngPreserveWhitespaces clipboard> --- ## NgXs __works__! </markdown>\\r\\n  <div fxLayoutAlign=\\"center center\\">\\r\\n    <markdown\\r\\n      mermaid\\r\\n      [src]=\\"\'../assets/angularngxs.md\'\\"\\r\\n      ngPreserveWhitespaces\\r\\n      clipboard\\r\\n    ></markdown>\\r\\n  </div>\\r\\n  <iframe\\r\\n    src=\\"https://stackblitz.com/edit/node-6idh7k?embed=1&file=README.md&hideNavigation=1&view=editor\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n\\r\\n  <iframe\\r\\n    src=\\"https://gmanojisaac.github.io/Angularngxs/ngxs\\"\\r\\n    style=\\"width: 50em; min-height: 30em; margin-top: 10vh;\\"\\r\\n  ></iframe>\\r\\n</ng-template>\\r\\n<ng-container [ngTemplateOutlet]=\\"tems\\" [ngTemplateOutletContext]=\\"myContext\\">\\r\\n</ng-container>\\r\\n"}],"modules":[{"name":"AppModule","id":"module-AppModule-e7ee8c95c91810c8c6e6c14cc68c4f907a68508f7a45ccf29ed86f00b76f5c2d2d4d5bd54f69bafadb8635d34eb41a20842922ac6f10567b4caa6443743790ac","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { BrowserModule } from \'@angular/platform-browser\';\\r\\nimport { NgxsModule } from \'@ngxs/store\';\\r\\nimport { NgxsReduxDevtoolsPluginModule } from \'@ngxs/devtools-plugin\';\\r\\nimport { NgxsLoggerPluginModule } from \'@ngxs/logger-plugin\';\\r\\n\\r\\nimport { environment } from \'../environments/environment\';\\r\\nimport { AppComponent } from \'./app.component\';\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { AppRoutingModule } from \'./app-routing.module\';\\r\\nimport { TaskModule } from \'./components/task.module\';\\r\\nimport { PureInboxScreenComponent } from \'./components/pure-inbox-screen.component\';\\r\\nimport { MarkdownModule, MarkdownService } from \'ngx-markdown\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\nimport { HttpClientModule } from \'@angular/common/http\';\\r\\n//import { InboxScreenComponent } from \'./components/inbox-screen.component\';\\r\\nimport { TaskCheckComponent } from \'./components/checkComponent.component\';\\r\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\r\\nimport {\\r\\n  ProgressBarComponent,\\r\\n  AboutmeIntroductionComponent,\\r\\n  AboutmeLecturerComponent,\\r\\n  AboutmeTelecomComponent,\\r\\n  AboutmeDevelopmentComponent,\\r\\n  AboutmeTestingComponent, StartScreenComponent\\r\\n} from \'./progress-bar/progress-bar.component\';\\r\\nimport { AppSharedModule } from \'./app-shared/app-shared.module\';\\r\\nimport { StackblitzComponent,\\r\\n  StackblitzTitleComponent,\\r\\n  StackblitzRunAngularComponent,\\r\\n  StackblitzStorybookComponent,\\r\\n  StackblitzUpdatePRComponent,\\r\\n  StackblitzStartPageComponent,\\r\\n  StackblitzStartTestComponent,\\r\\n  StackblitzMermaidInlineComponent\\r\\n } from \'./youtube/2022sept02/stackblitz.component\';\\r\\n import {SeptfifteenComponent} from \'./youtube/Sep2022/septfifteen/septfifteen.component\';\\r\\nimport { AboutMeComponent } from \'./about-me/about-me.component\';\\r\\nimport { YoutubeMakingComponent } from \'./youtube-making/youtube-making.component\';\\r\\n@NgModule({\\r\\n  declarations: [\\r\\n    AppComponent,\\r\\n    PureInboxScreenComponent,\\r\\n    TaskCheckComponent,\\r\\n    ProgressBarComponent,\\r\\n    AboutmeIntroductionComponent,\\r\\n    AboutmeLecturerComponent,\\r\\n    AboutmeTelecomComponent,\\r\\n    AboutmeDevelopmentComponent,\\r\\n    AboutmeTestingComponent,StartScreenComponent,\\r\\n    StackblitzComponent, StackblitzTitleComponent,\\r\\n    StackblitzRunAngularComponent,\\r\\n    StackblitzStorybookComponent,\\r\\n    StackblitzUpdatePRComponent,\\r\\n    StackblitzStartPageComponent,\\r\\n    StackblitzStartTestComponent,\\r\\n    StackblitzMermaidInlineComponent,\\r\\n    SeptfifteenComponent,\\r\\n    AboutMeComponent,\\r\\n    YoutubeMakingComponent\\r\\n  ], //],\\r\\n  imports: [\\r\\n    AppSharedModule,\\r\\n    HttpClientModule,\\r\\n    AppRoutingModule,\\r\\n    BrowserModule,\\r\\n    TaskModule,\\r\\n    NgxsModule.forRoot([], {\\r\\n      developmentMode: !environment.production,\\r\\n    }),\\r\\n    NgxsReduxDevtoolsPluginModule.forRoot(),\\r\\n    NgxsLoggerPluginModule.forRoot({\\r\\n      disabled: environment.production,\\r\\n    }),\\r\\n    MarkdownModule.forRoot({ loader: HttpClient }),\\r\\n    BrowserAnimationsModule,\\r\\n  ],\\r\\n  providers: [MarkdownService],\\r\\n  bootstrap: [AppComponent],\\r\\n})\\r\\nexport class AppModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AboutMeComponent"},{"name":"AboutmeDevelopmentComponent"},{"name":"AboutmeIntroductionComponent"},{"name":"AboutmeLecturerComponent"},{"name":"AboutmeTelecomComponent"},{"name":"AboutmeTestingComponent"},{"name":"AppComponent"},{"name":"ProgressBarComponent"},{"name":"PureInboxScreenComponent"},{"name":"SeptfifteenComponent"},{"name":"StackblitzComponent"},{"name":"StackblitzMermaidInlineComponent"},{"name":"StackblitzRunAngularComponent"},{"name":"StackblitzStartPageComponent"},{"name":"StackblitzStartTestComponent"},{"name":"StackblitzStorybookComponent"},{"name":"StackblitzTitleComponent"},{"name":"StackblitzUpdatePRComponent"},{"name":"StartScreenComponent"},{"name":"TaskCheckComponent"},{"name":"YoutubeMakingComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"AppSharedModule"},{"name":"TaskModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\n\\nconst routes: Routes = [];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes)],\\n  exports: [RouterModule]\\n})\\nexport class AppRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AppSharedModule","id":"module-AppSharedModule-1c5bce74035c950f95fd3548eac9b3da822a3874c69219ca2b9026c06ab72a40d3bc126814e60847e5845c3946d3ea07306c6140c995031171c2b9bd3a16dbe5","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app-shared/app-shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { MaterialModule } from \'../material/material.module\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [],\\r\\n  imports: [CommonModule],\\r\\n  exports: [MaterialModule, FormsModule, ReactiveFormsModule, FlexLayoutModule],\\r\\n})\\r\\nexport class AppSharedModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"MaterialModule"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MaterialModule","id":"module-MaterialModule-1ad804fd29031e9688450dc2e587fa9e5808bbd00cdbe0fd5c18ecaf0f65bfa5761436cdcb1c8aefb846531209ab6a6fe2ae6fe5e3d402b014e05210c578046a","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/material/material.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { A11yModule } from \'@angular/cdk/a11y\';\\nimport { ClipboardModule } from \'@angular/cdk/clipboard\';\\nimport { DragDropModule } from \'@angular/cdk/drag-drop\';\\nimport { PortalModule } from \'@angular/cdk/portal\';\\nimport { ScrollingModule } from \'@angular/cdk/scrolling\';\\nimport { CdkStepperModule } from \'@angular/cdk/stepper\';\\nimport { CdkTableModule } from \'@angular/cdk/table\';\\nimport { CdkTreeModule } from \'@angular/cdk/tree\';\\nimport { MatAutocompleteModule } from \'@angular/material/autocomplete\';\\nimport { MatBadgeModule } from \'@angular/material/badge\';\\nimport { MatBottomSheetModule } from \'@angular/material/bottom-sheet\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatButtonToggleModule } from \'@angular/material/button-toggle\';\\nimport { MatCardModule } from \'@angular/material/card\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatChipsModule } from \'@angular/material/chips\';\\nimport { MatStepperModule } from \'@angular/material/stepper\';\\nimport { MatDatepickerModule } from \'@angular/material/datepicker\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatDividerModule } from \'@angular/material/divider\';\\nimport { MatExpansionModule } from \'@angular/material/expansion\';\\nimport { MatGridListModule } from \'@angular/material/grid-list\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatListModule } from \'@angular/material/list\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatNativeDateModule, MatRippleModule } from \'@angular/material/core\';\\nimport { MatPaginatorModule } from \'@angular/material/paginator\';\\nimport { MatProgressBarModule } from \'@angular/material/progress-bar\';\\nimport { MatProgressSpinnerModule } from \'@angular/material/progress-spinner\';\\nimport { MatRadioModule } from \'@angular/material/radio\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { MatSidenavModule } from \'@angular/material/sidenav\';\\nimport { MatSliderModule } from \'@angular/material/slider\';\\nimport { MatSlideToggleModule } from \'@angular/material/slide-toggle\';\\nimport { MatSnackBarModule } from \'@angular/material/snack-bar\';\\nimport { MatSortModule } from \'@angular/material/sort\';\\nimport { MatTableModule } from \'@angular/material/table\';\\nimport { MatTabsModule } from \'@angular/material/tabs\';\\nimport { MatToolbarModule } from \'@angular/material/toolbar\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { MatTreeModule } from \'@angular/material/tree\';\\nimport { OverlayModule } from \'@angular/cdk/overlay\';\\n \\n@NgModule({\\n  exports: [\\n    A11yModule,\\n    ClipboardModule,\\n    CdkStepperModule,\\n    CdkTableModule,\\n    CdkTreeModule,\\n    DragDropModule,\\n    MatAutocompleteModule,\\n    MatBadgeModule,\\n    MatBottomSheetModule,\\n    MatButtonModule,\\n    MatButtonToggleModule,\\n    MatCardModule,\\n    MatCheckboxModule,\\n    MatChipsModule,\\n    MatStepperModule,\\n    MatDatepickerModule,\\n    MatDialogModule,\\n    MatDividerModule,\\n    MatExpansionModule,\\n    MatGridListModule,\\n    MatIconModule,\\n    MatInputModule,\\n    MatListModule,\\n    MatMenuModule,\\n    MatNativeDateModule,\\n    MatPaginatorModule,\\n    MatProgressBarModule,\\n    MatProgressSpinnerModule,\\n    MatRadioModule,\\n    MatRippleModule,\\n    MatSelectModule,\\n    MatSidenavModule,\\n    MatSliderModule,\\n    MatSlideToggleModule,\\n    MatSnackBarModule,\\n    MatSortModule,\\n    MatTableModule,\\n    MatTabsModule,\\n    MatToolbarModule,\\n    MatTooltipModule,\\n    MatTreeModule,\\n    OverlayModule,\\n    PortalModule,\\n    ScrollingModule,\\n  ]\\n})\\nexport class MaterialModule { }","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TaskMarkedModule","id":"module-TaskMarkedModule-9cf5235267f6cf39e88bea068941e857462f0b5fae7beb176e72baf55ecf979530757e1e645fd631d4ca271bc90947cc8b20c828cc120b510ca666dd07575e87","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/components/taskMarked.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\nimport { MarkdownModule } from \'ngx-markdown\';\\r\\n\\r\\nimport { InboxScreenComponent } from \'./inbox-screen.component\';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, MarkdownModule.forChild()],\\r\\n  exports: [InboxScreenComponent],\\r\\n  declarations: [InboxScreenComponent],\\r\\n  providers: [],\\r\\n})\\r\\nexport class TaskMarkedModule {}","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"InboxScreenComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"InboxScreenComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TaskModule","id":"module-TaskModule-8d672c6302a17817b17a18f4985a00db00e86e1788c24c8c598fb1edb764e9f948e96e437c8808e773bc264114685a13156596b44ab09c1e39f05223c0de2fc6","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/components/task.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { NgxsModule } from \'@ngxs/store\';\\r\\n\\r\\nimport { TaskComponent } from \'./task.component\';\\r\\nimport { TaskListComponent } from \'./task-list.component\';\\r\\nimport { TasksState } from \'../state/task.state\';\\r\\nimport { PureTaskListComponent } from \'./pure-task-list.component\';\\r\\nimport { MarkdownModule } from \'ngx-markdown\';\\r\\n\\r\\nimport {TaskMarkedComponent}from \'./taskMarked.component\';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, NgxsModule.forFeature([TasksState]), MarkdownModule.forChild()],\\r\\n  exports: [TaskComponent, TaskListComponent,TaskMarkedComponent],\\r\\n  declarations: [TaskComponent, TaskListComponent, PureTaskListComponent, TaskMarkedComponent],\\r\\n  providers: [],\\r\\n})\\r\\nexport class TaskModule {}","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"PureTaskListComponent"},{"name":"TaskComponent"},{"name":"TaskListComponent"},{"name":"TaskMarkedComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"TaskComponent"},{"name":"TaskListComponent"},{"name":"TaskMarkedComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n}"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"defaultTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n]"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"functions":[],"typealiases":[],"enumerations":[],"groupedVariables":{"src/app/state/task.state.ts":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  ERROR: \'APP_ERROR\',\\r\\n}"},{"name":"defaultTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\r\\n  { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n]"}],"src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"src/app/app-routing.module.ts","module":"AppRoutingModule","children":[],"kind":"module"}]},"coverage":{"count":16,"status":"low","files":[{"filePath":"src/app/about-me/about-me.component.ts","type":"component","linktype":"component","name":"AboutMeComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/components/checkComponent.component.ts","type":"component","linktype":"component","name":"TaskCheckComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/inbox-screen.component.ts","type":"component","linktype":"component","name":"InboxScreenComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.component.ts","type":"component","linktype":"component","name":"PureInboxScreenComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/pure-task-list.component.ts","type":"component","linktype":"component","name":"PureTaskListComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/components/task-list.component.ts","type":"component","linktype":"component","name":"TaskListComponent","coveragePercent":40,"coverageCount":"2/5","status":"medium"},{"filePath":"src/app/components/task.component.ts","type":"component","linktype":"component","name":"TaskComponent","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"src/app/components/taskMarked.component.ts","type":"component","linktype":"component","name":"TaskMarkedComponent","coveragePercent":25,"coverageCount":"2/8","status":"low"},{"filePath":"src/app/models/task.model.ts","type":"interface","linktype":"interface","name":"Task","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"AboutmeDevelopmentComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"AboutmeIntroductionComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"AboutmeLecturerComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"AboutmeTelecomComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"AboutmeTestingComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"ProgressBarComponent","coveragePercent":50,"coverageCount":"4/8","status":"medium"},{"filePath":"src/app/progress-bar/progress-bar.component.ts","type":"component","linktype":"component","name":"StartScreenComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"AppError","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"ArchiveTask","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"PinTask","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"injectable","linktype":"injectable","name":"TasksState","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"interface","linktype":"interface","name":"TaskStateModel","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"defaultTasks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/youtube-making/youtube-making.component.ts","type":"component","linktype":"component","name":"YoutubeMakingComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzMermaidInlineComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzRunAngularComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzStartPageComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzStartTestComponent","coveragePercent":20,"coverageCount":"3/15","status":"low"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzStorybookComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzTitleComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"src/app/youtube/2022sept02/stackblitz.component.ts","type":"component","linktype":"component","name":"StackblitzUpdatePRComponent","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts","type":"component","linktype":"component","name":"SeptfifteenComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.P)(documentation_namespaceObject);var parameters={options:{storySort:{order:["AboutMe",["Introduction","Career","Lecturer","Telecom","Development"],"Youtube15sep22",["Title","FlowChart","RunAngular","RunStorybook","UpdatePR"],"YoutubeMaking",["AngularCompSetup","Markdown","Mermaid","StorybookDesign","AngularEnvSetup","AngularNgXs"]]}},actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./src/stories/AboutMe/Career.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,career:()=>career,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/about-me/about-me.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"My Career Graph working at various Organizations"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"AboutMe/Career",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Career",mdxType:"Story"},{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Career"}}))}MDXContent.isMDXComponent=!0;var career=function(){return{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Career"}}};career.storyName="Career",career.parameters={storySource:{source:"{\n  template: `<app-about-me [myselectedtemp]= \"myselectedtemp\"></app-about-me>`,\n  props: {\n    myselectedtemp: 'Career'\n  }\n}"}};var componentMeta={title:"AboutMe/Career",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["career"]},mdxStoryNameToKey={Career:"career"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["career"]},"./src/stories/AboutMe/Development.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,development:()=>development});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/about-me/about-me.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Changed my career to development in Angular / Typescript / Firebase as a Full Stack Developer."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"AboutMe/Development",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Development",mdxType:"Story"},{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Development"}}))}MDXContent.isMDXComponent=!0;var development=function(){return{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Development"}}};development.storyName="Development",development.parameters={storySource:{source:"{\n  template: `<app-about-me [myselectedtemp]= \"myselectedtemp\"></app-about-me>`,\n  props: {\n    myselectedtemp: 'Development'\n  }\n}"}};var componentMeta={title:"AboutMe/Development",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["development"]},mdxStoryNameToKey={Development:"development"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["development"]},"./src/stories/AboutMe/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,introduction:()=>introduction});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/about-me/about-me.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Let me Introduce Myself"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"AboutMe/Introduction",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Introduction",mdxType:"Story"},{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Introduction"}}))}MDXContent.isMDXComponent=!0;var introduction=function(){return{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Introduction"}}};introduction.storyName="Introduction",introduction.parameters={storySource:{source:"{\n  template: `<app-about-me [myselectedtemp]= \"myselectedtemp\"></app-about-me>`,\n  props: {\n    myselectedtemp: 'Introduction'\n  }\n}"}};var componentMeta={title:"AboutMe/Introduction",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["introduction"]},mdxStoryNameToKey={Introduction:"introduction"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["introduction"]},"./src/stories/AboutMe/Lecturer.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,lecturer:()=>lecturer});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/about-me/about-me.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Started my career as a Lecturer in an Engg College"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"AboutMe/Lecturer",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Lecturer",mdxType:"Story"},{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Lecturer"}}))}MDXContent.isMDXComponent=!0;var lecturer=function(){return{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Lecturer"}}};lecturer.storyName="Lecturer",lecturer.parameters={storySource:{source:"{\n  template: `<app-about-me [myselectedtemp]= \"myselectedtemp\"></app-about-me>`,\n  props: {\n    myselectedtemp: 'Lecturer'\n  }\n}"}};var componentMeta={title:"AboutMe/Lecturer",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["lecturer"]},mdxStoryNameToKey={Lecturer:"lecturer"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["lecturer"]},"./src/stories/AboutMe/Telecom.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,telecom:()=>telecom});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/about-me/about-me.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Started my next career as a Test Engineer and worked in various domains like Telecom/ Datacom/ Mobile /3G Stack"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"AboutMe/Telecom",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Telecom",mdxType:"Story"},{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Telecom"}}))}MDXContent.isMDXComponent=!0;var telecom=function(){return{template:'<app-about-me [myselectedtemp]= "myselectedtemp"></app-about-me>',props:{myselectedtemp:"Telecom"}}};telecom.storyName="Telecom",telecom.parameters={storySource:{source:"{\n  template: `<app-about-me [myselectedtemp]= \"myselectedtemp\"></app-about-me>`,\n  props: {\n    myselectedtemp: 'Telecom'\n  }\n}"}};var componentMeta={title:"AboutMe/Telecom",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_about_me_about_me_component__WEBPACK_IMPORTED_MODULE_4__.J],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["telecom"]},mdxStoryNameToKey={Telecom:"telecom"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["telecom"]},"./src/stories/Youtube15sep22/FlowChart.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,flowChart:()=>flowChart});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Steps to be followed to make the Angular Program run in stackblitz and Open Issue update."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/FlowChart",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"FlowChart",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Flowchart"}}))}MDXContent.isMDXComponent=!0;var flowChart=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Flowchart"}}};flowChart.storyName="FlowChart",flowChart.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'Flowchart'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/FlowChart",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["flowChart"]},mdxStoryNameToKey={FlowChart:"flowChart"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["flowChart"]},"./src/stories/Youtube15sep22/Output.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,output:()=>output});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Run Angular in Stackblitz as NodeJS App."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/Output",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Output",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Output"}}))}MDXContent.isMDXComponent=!0;var output=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Output"}}};output.storyName="Output",output.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'Output'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/Output",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["output"]},mdxStoryNameToKey={Output:"output"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["output"]},"./src/stories/Youtube15sep22/RunAngular.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,runAngular:()=>runAngular});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Run Angular Program"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Run in Windows Environment and also in Stackblitz cloud nodeJs environment."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/RunAngular",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"RunAngular",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Angular"}}))}MDXContent.isMDXComponent=!0;var runAngular=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Angular"}}};runAngular.storyName="RunAngular",runAngular.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'Angular'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/RunAngular",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["runAngular"]},mdxStoryNameToKey={RunAngular:"runAngular"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["runAngular"]},"./src/stories/Youtube15sep22/RunStorybook.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,runStorybook:()=>runStorybook});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Create Storybook branch and load in stackblitz nodeJs Environment."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/RunStorybook",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"RunStorybook",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Storybook"}}))}MDXContent.isMDXComponent=!0;var runStorybook=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Storybook"}}};runStorybook.storyName="RunStorybook",runStorybook.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'Storybook'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/RunStorybook",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["runStorybook"]},mdxStoryNameToKey={RunStorybook:"runStorybook"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["runStorybook"]},"./src/stories/Youtube15sep22/Title.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,title:()=>title});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Run Angular in Stackblitz as NodeJS App."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/Title",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Title",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Title"}}))}MDXContent.isMDXComponent=!0;var title=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"Title"}}};title.storyName="Title",title.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'Title'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/Title",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["title"]},mdxStoryNameToKey={Title:"title"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["title"]},"./src/stories/Youtube15sep22/UpdatePR.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,updatePr:()=>updatePr});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube/Sep2022/septfifteen/septfifteen.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Open PR exists for stackblitz NodeJs Angular Program Execution"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Update the PR and give all details"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Youtube15sep22/UpdatePR",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"UpdatePR",mdxType:"Story"},{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"PRUpdate"}}))}MDXContent.isMDXComponent=!0;var updatePr=function(){return{template:'<app-septfifteen [myselectedtemp]= "myselectedtemp"></app-septfifteen>',props:{myselectedtemp:"PRUpdate"}}};updatePr.storyName="UpdatePR",updatePr.parameters={storySource:{source:"{\n  template: `<app-septfifteen [myselectedtemp]= \"myselectedtemp\"></app-septfifteen>`,\n  props: {\n    myselectedtemp: 'PRUpdate'\n  }\n}"}};var componentMeta={title:"Youtube15sep22/UpdatePR",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_Sep2022_septfifteen_septfifteen_component__WEBPACK_IMPORTED_MODULE_4__.P],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["updatePr"]},mdxStoryNameToKey={UpdatePR:"updatePr"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["updatePr"]},"./src/stories/YoutubeMaking/angularcomponent.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,angularCompSetup:()=>angularCompSetup,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Angular Component creation and setup"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Use angular-cli to create the necessary features"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"The Steps are"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/AngularCompSetup",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"AngularCompSetup",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"angularComp"}}))}MDXContent.isMDXComponent=!0;var angularCompSetup=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"angularComp"}}};angularCompSetup.storyName="AngularCompSetup",angularCompSetup.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'angularComp'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/AngularCompSetup",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["angularCompSetup"]},mdxStoryNameToKey={AngularCompSetup:"angularCompSetup"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["angularCompSetup"]},"./src/stories/YoutubeMaking/angularsetup.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,angularEnvSetup:()=>angularEnvSetup,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Angular Setup in Windows Environment"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Use Windows 64bit Laptop connected with Internet."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Use gh-pages / stackblitz / push github"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/AngularEnvSetup",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"AngularEnvSetup",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"angularsetup"}}))}MDXContent.isMDXComponent=!0;var angularEnvSetup=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"angularsetup"}}};angularEnvSetup.storyName="AngularEnvSetup",angularEnvSetup.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'angularsetup'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/AngularEnvSetup",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["angularEnvSetup"]},mdxStoryNameToKey={AngularEnvSetup:"angularEnvSetup"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["angularEnvSetup"]},"./src/stories/YoutubeMaking/markdown.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,markdown:()=>markdown});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Markdown is used from ngx-markdown"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"ngx-markdown is used to render the markdown with various styles"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Markdown is used in various ways"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/Markdown",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Markdown",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingmarkdown"}}))}MDXContent.isMDXComponent=!0;var markdown=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingmarkdown"}}};markdown.storyName="Markdown",markdown.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'usingmarkdown'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/Markdown",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["markdown"]},mdxStoryNameToKey={Markdown:"markdown"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["markdown"]},"./src/stories/YoutubeMaking/mermaid.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,mermaid:()=>mermaid});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Mermaid Diagrams are used to pictorially describe ideas"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Mermaid diagrams are used using ngx-markdown module"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Load mermaid diagrams in various ways"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/Mermaid",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"Mermaid",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingmermaid"}}))}MDXContent.isMDXComponent=!0;var mermaid=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingmermaid"}}};mermaid.storyName="Mermaid",mermaid.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'usingmermaid'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/Mermaid",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["mermaid"]},mdxStoryNameToKey={Mermaid:"mermaid"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["mermaid"]},"./src/stories/YoutubeMaking/ngxs.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,angularNgXs:()=>angularNgXs,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Angular Setup in Windows Environment"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Use Windows 64bit Laptop connected with Internet."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Use gh-pages / stackblitz / push github"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/AngularNgXs",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"AngularNgXs",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingngxs"}}))}MDXContent.isMDXComponent=!0;var angularNgXs=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"usingngxs"}}};angularNgXs.storyName="AngularNgXs",angularNgXs.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'usingngxs'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/AngularNgXs",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["angularNgXs"]},mdxStoryNameToKey={AngularNgXs:"angularNgXs"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["angularNgXs"]},"./src/stories/YoutubeMaking/storybook.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,storybookDesign:()=>storybookDesign});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/youtube-making/youtube-making.component.ts"),ngx_markdown__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs")),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/app/app-shared/app-shared.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"MDX feature of the storybook is used"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Create mdx files and display individual stories along with ngx-markdown features"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Steps followed when using MDX in Storybook"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"YoutubeMaking/StorybookDesign",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.oG,{name:"StorybookDesign",mdxType:"Story"},{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"storybookdesign"}}))}MDXContent.isMDXComponent=!0;var storybookDesign=function(){return{template:'<app-youtube-making [myselectedtemp]= "myselectedtemp"></app-youtube-making>',props:{myselectedtemp:"storybookdesign"}}};storybookDesign.storyName="StorybookDesign",storybookDesign.parameters={storySource:{source:"{\n  template: `<app-youtube-making [myselectedtemp]= \"myselectedtemp\"></app-youtube-making>`,\n  props: {\n    myselectedtemp: 'storybookdesign'\n  }\n}"}};var componentMeta={title:"YoutubeMaking/StorybookDesign",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}}},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.moduleMetadata)({declarations:[_app_youtube_making_youtube_making_component__WEBPACK_IMPORTED_MODULE_4__.i],imports:[_app_app_shared_app_shared_module__WEBPACK_IMPORTED_MODULE_6__.o,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.JP.forRoot({loader:_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.eN})],providers:[ngx_markdown__WEBPACK_IMPORTED_MODULE_8__.Zy]})],includeStories:["storybookDesign"]},mdxStoryNameToKey={StorybookDesign:"storybookDesign"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["storybookDesign"]},"./src/styles.scss":()=>{},"./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackEmptyContext},"./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/AboutMe/Career.stories.mdx":"./src/stories/AboutMe/Career.stories.mdx","./stories/AboutMe/Development.stories.mdx":"./src/stories/AboutMe/Development.stories.mdx","./stories/AboutMe/Introduction.stories.mdx":"./src/stories/AboutMe/Introduction.stories.mdx","./stories/AboutMe/Lecturer.stories.mdx":"./src/stories/AboutMe/Lecturer.stories.mdx","./stories/AboutMe/Telecom.stories.mdx":"./src/stories/AboutMe/Telecom.stories.mdx","./stories/Youtube15sep22/FlowChart.stories.mdx":"./src/stories/Youtube15sep22/FlowChart.stories.mdx","./stories/Youtube15sep22/Output.stories.mdx":"./src/stories/Youtube15sep22/Output.stories.mdx","./stories/Youtube15sep22/RunAngular.stories.mdx":"./src/stories/Youtube15sep22/RunAngular.stories.mdx","./stories/Youtube15sep22/RunStorybook.stories.mdx":"./src/stories/Youtube15sep22/RunStorybook.stories.mdx","./stories/Youtube15sep22/Title.stories.mdx":"./src/stories/Youtube15sep22/Title.stories.mdx","./stories/Youtube15sep22/UpdatePR.stories.mdx":"./src/stories/Youtube15sep22/UpdatePR.stories.mdx","./stories/YoutubeMaking/angularcomponent.stories.mdx":"./src/stories/YoutubeMaking/angularcomponent.stories.mdx","./stories/YoutubeMaking/angularsetup.stories.mdx":"./src/stories/YoutubeMaking/angularsetup.stories.mdx","./stories/YoutubeMaking/markdown.stories.mdx":"./src/stories/YoutubeMaking/markdown.stories.mdx","./stories/YoutubeMaking/mermaid.stories.mdx":"./src/stories/YoutubeMaking/mermaid.stories.mdx","./stories/YoutubeMaking/ngxs.stories.mdx":"./src/stories/YoutubeMaking/ngxs.stories.mdx","./stories/YoutubeMaking/storybook.stories.mdx":"./src/stories/YoutubeMaking/storybook.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[968],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"),__webpack_exec__("./node_modules/prismjs/themes/prism-okaidia.css"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css"),__webpack_exec__("./src/styles.scss"),__webpack_exec__("./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css"),__webpack_exec__("./node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css"),__webpack_exec__("./node_modules/prismjs/plugins/command-line/prism-command-line.css"),__webpack_exec__("./src/polyfills.ts"))));__webpack_require__.O()}]);